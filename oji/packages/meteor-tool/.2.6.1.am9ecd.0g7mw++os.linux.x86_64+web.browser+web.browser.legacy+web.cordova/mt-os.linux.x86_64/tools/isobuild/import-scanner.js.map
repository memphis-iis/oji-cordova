{"version":3,"file":"tools/isobuild/import-scanner.js.map","mappings":"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","names":["module1","default","_objectSpread","_defineProperty","ImportScanner","assert","inspect","Script","isString","isObject","isEmpty","has","keys","each","omit","sha1","matches","archMatches","isLegacyArch","findImportedModuleIdentifiers","cssToCommonJS","buildmessage","Profile","mkdir_p","pathJoin","pathRelative","pathNormalize","pathExtname","pathDirname","pathIsAbsolute","convertToOSPath","convertToPosixPath","realpathOrNull","writeFileAtomically","readFile","optimisticReadFile","optimisticStatOrNull","optimisticLStatOrNull","optimisticHashOrNull","optimisticLookupPackageJsonArray","wrap","Resolver","SourceNode","SourceMapConsumer","require","relative","posixRelative","dirname","posixDirname","posix","compile","reifyCompile","parse","reifyBabelParse","fakeFileStat","isFile","isDirectory","fakeSymbol","Symbol","emptyDataString","emptyData","Buffer","from","emptyHash","stripHashBang","dataString","replace","reifyCompileWithCache","source","_hash","bundleArch","cacheFilePath","e","code","isLegacy","result","generateLetDeclarations","avoidModernSyntax","enforceStrictMode","dynamicImport","ast","Promise","resolve","then","makeCacheKey","_source","hash","JSON","stringify","DefaultHandlers","constructor","cacheDir","getCacheFileName","file","call","method","js","parts","absPath","split","nmi","lastIndexOf","nextPart","cacheFileName","mjs","json","jsonData","jsonDataToCommonJS","css","forEach","type","prototype","data","scriptParseCache","Object","create","canBeParsedAsPlainJS","stripLeadingSlash","path","charAt","slice","ensureLeadingSlash","Status","NOT_IMPORTED","DYNAMIC","STATIC","importedStatusOrder","alignImportedStatuses","files","maxIndex","Math","max","map","indexOf","imported","maxStatus","getParentStatus","importInfos","some","entry","parentWasDynamic","isHigherStatus","newStatus","previousStatus","setImportedStatus","status","LRU","IMPORT_SCANNER_CACHE","length","ids","total","_info","id","useNodeStub","deps","name","extensions","sourceRoot","nodeModulesPaths","defaultHandlers","resolver","getOrCreate","caller","targetArch","statOrNull","stat","getFile","toLowerCase","absPathToOutputIndex","outputFiles","addFile","absLowerPath","old","implicit","assign","push","addInputFiles","checkSourceAndTargetPaths","sourcePath","absModuleId","getAbsModuleId","combineFiles","addFileByRealPath","realPath","realPathToFiles","getInfoByRealPath","firstFile","getDataString","realPathCache","relativePath","startsWith","foundSymbolicLink","testPath","lstat","isSymbolicLink","getSourcePath","targetPath","absSourcePath","absTargetPath","absSourceId","absTargetId","sourceFile","servePath","lazy","relativeId","getRelativeImportId","dynamic","possiblySpurious","parentPath","oldFile","newFile","scanner","checkProperty","fuzzyCase","Error","getChunk","sourceMap","consumer","await","node","fromStringWithSourceMap","destroy","combinedDataString","combinedSourceMap","toStringWithSourceMap","toJSON","mappings","scanImports","scanFile","scanMissingModules","missingModules","ok","Array","isArray","newlyMissing","newlyAdded","previousAllMissingModules","allMissingModules","staticImportInfo","dynamicImportInfo","importInfo","fakeStub","skipScan","mergeMissing","target","importInfoList","pathToIndex","index","mergeFilesWithSameRealPath","container","absContainerPath","alias","getOutputFiles","filter","hasErrors","relPath","joinAndStat","get","set","parentFile","forDynamicImport","resolved","onMissing","packageJsonMap","info","helpers","pkg","packageJsonFile","addPkgJsonToOutput","absParentId","absChildId","reportPendingErrors","$ParseError","error","message","line","loc","column","isWebBrowser","absImportedPath","depFile","notStrictEqual","endsWith","readPackageJson","readDepFile","isWeb","rawDataString","toString","charCodeAt","key","readModule","dotExt","ext","rawFile","shouldUseNode","start","relDir","pkgJsonArray","pkgJson","getNodeModulesAbsModuleId","getSourceRootAbsModuleId","relPathWithinNodeModules","dirs","pop","shift","isApp","bundlingForWeb","topLevelDir","dir","absParentPath","isNative","stubId","getNativeStubId","packageName","missing","pkgJsonPath","relPkgJsonPath","pkgFile","resolvePkgJsonBrowserAliases","browser","absPkgJsonPath","sourceId","sourceAbsModuleId","hasAuthorityToCreateAlias","areAbsModuleIdsInSamePackage","targetId","relSourcePath","path1","path2","strictEqual","getPackageRoot","join","ISp"],"sourceRoot":"","sources":["tools/isobuild/import-scanner.ts"],"sourcesContent":["import assert from \"assert\";\nimport {inspect} from \"util\";\nimport {Script} from \"vm\";\nimport {\n  isString, isObject, isEmpty, has, keys, each, omit,\n} from \"underscore\";\nimport {sha1} from \"../fs/watch\";\nimport {\n  matches as archMatches,\n  isLegacyArch,\n} from \"../utils/archinfo\";\nimport {findImportedModuleIdentifiers} from \"./js-analyze.js\";\nimport {cssToCommonJS} from \"./css-modules\";\nimport buildmessage from \"../utils/buildmessage.js\";\nimport {Profile} from \"../tool-env/profile\";\nimport {\n  mkdir_p,\n  pathJoin,\n  pathRelative,\n  pathNormalize,\n  pathExtname,\n  pathDirname,\n  pathIsAbsolute,\n  convertToOSPath,\n  convertToPosixPath,\n  realpathOrNull,\n  writeFileAtomically,\n  readFile,\n} from \"../fs/files\";\n\nconst { SourceNode, SourceMapConsumer } = require(\"source-map\");\n\nconst {\n  relative: posixRelative,\n  dirname: posixDirname,\n} = require(\"path\").posix;\n\nimport {\n  optimisticReadFile,\n  optimisticStatOrNull,\n  optimisticLStatOrNull,\n  optimisticHashOrNull,\n  optimisticLookupPackageJsonArray,\n} from \"../fs/optimistic\";\n\nimport { wrap } from \"optimism\";\nconst { compile: reifyCompile } = require(\"@meteorjs/reify/lib/compiler\");\nconst { parse: reifyBabelParse } = require(\"@meteorjs/reify/lib/parsers/babel\");\n\nimport Resolver, { Resolution } from \"./resolver\";\n\nconst fakeFileStat = {\n  isFile() {\n    return true;\n  },\n\n  isDirectory() {\n    return false;\n  }\n} as import(\"fs\").Stats;\n\n// Symbol used by scanMissingModules to mark certain files as temporary,\n// to prevent them from being added to scanner.outputFiles.\nconst fakeSymbol = Symbol(\"fake\");\n\nconst emptyDataString = \"\";\nconst emptyData = Buffer.from(emptyDataString, \"utf8\");\nconst emptyHash = sha1(emptyDataString);\n\nfunction stripHashBang(dataString: string) {\n  return dataString.replace(/^#![^\\n]*/, \"\");\n}\n\nconst reifyCompileWithCache = Profile(\"reifyCompileWithCache\", wrap(function (\n  source,\n  _hash,\n  bundleArch,\n  cacheFilePath,\n) {\n  if (cacheFilePath) {\n    try {\n      return readFile(cacheFilePath, \"utf8\");\n    } catch (e) {\n      if (e.code !== \"ENOENT\") throw e;\n    }\n  }\n\n  const isLegacy = isLegacyArch(bundleArch);\n  let result = reifyCompile(stripHashBang(source), {\n    parse: reifyBabelParse,\n    generateLetDeclarations: !isLegacy,\n    avoidModernSyntax: isLegacy,\n    enforceStrictMode: false,\n    dynamicImport: true,\n    ast: false,\n  }).code;\n\n  if (cacheFilePath) {\n    Promise.resolve().then(\n      () => writeFileAtomically(cacheFilePath, result),\n    );\n  }\n\n  return result;\n}, {\n  makeCacheKey(_source, hash, bundleArch) {\n    return JSON.stringify([hash, bundleArch]);\n  }\n}));\n\nclass DefaultHandlers {\n  private cacheDir?: string;\n  private bundleArch: string;\n\n  constructor({\n    cacheDir,\n    bundleArch,\n  }: Record<string, string>) {\n    this.bundleArch = bundleArch;\n    if (cacheDir) {\n      mkdir_p(this.cacheDir = pathJoin(\n        cacheDir,\n        bundleArch,\n      ));\n    }\n  }\n\n  getCacheFileName(file: RawFile) {\n    return this.cacheDir && pathJoin(this.cacheDir, \"reify-\" + file.hash + \".js\");\n  }\n\n  call(\n    method: \"js\" | \"mjs\" | \"json\" | \"css\",\n    file: RawFile,\n  ): string {\n    return this[method](file);\n  }\n\n  js(file: RawFile) {\n    const parts = file.absPath.split(\"/\");\n    const nmi = parts.lastIndexOf(\"node_modules\");\n    if (nmi >= 0) {\n      const nextPart = parts[nmi + 1];\n      // The core-js package is one example of a package that does not\n      // need recompilation to support import/export syntax. Since it is\n      // used heavily by the ecmascript-runtime-{client,server} Meteor\n      // packages, it makes sense to hard-code this exception.\n      if (nextPart === \"core-js\") {\n        return stripHashBang(file.dataString);\n      }\n    }\n\n    const cacheFileName = this.cacheDir ?\n      this.getCacheFileName(file) :\n      null;\n\n    return reifyCompileWithCache(\n      file.dataString,\n      file.hash,\n      this.bundleArch,\n      cacheFileName\n    )\n  }\n\n  // Files with an .mjs extension are just JavaScript plus module syntax.\n  mjs(file: RawFile) {\n    return this.js(file);\n  }\n\n  json(file: RawFile) {\n    file.jsonData = JSON.parse(file.dataString);\n    return jsonDataToCommonJS(file.jsonData);\n  }\n\n  css({ dataString, hash }: RawFile) {\n    return cssToCommonJS(dataString, hash);\n  }\n}\n\n[\n  \"js\",\n  \"json\",\n  \"css\",\n].forEach(function (this: any, type: string) {\n  this[type] = Profile(\"DefaultHandlers.\" + type, this[type]);\n}, DefaultHandlers.prototype);\n\nfunction jsonDataToCommonJS(data: any) {\n  return \"module.exports = \" +\n    JSON.stringify(data, null, 2) + \";\\n\";\n}\n\n// This is just a map from hashes to booleans, so it doesn't need full LRU\n// eviction logic.\nconst scriptParseCache = Object.create(null);\n\nfunction canBeParsedAsPlainJS(dataString: string, hash: string): boolean {\n  if (hash && has(scriptParseCache, hash)) {\n    return scriptParseCache[hash];\n  }\n\n  try {\n    var result = !! new Script(dataString);\n  } catch (e) {\n    result = false;\n  }\n\n  if (hash) {\n    scriptParseCache[hash] = result;\n  }\n\n  return result;\n}\n\nfunction stripLeadingSlash(path?: string) {\n  if (typeof path === \"string\" &&\n      path.charAt(0) === \"/\") {\n    return path.slice(1);\n  }\n\n  return path;\n}\n\nfunction ensureLeadingSlash(path?: string) {\n  if (typeof path !== \"string\") {\n    return path;\n  }\n\n  const posix = convertToPosixPath(path);\n\n  if (posix.charAt(0) !== \"/\") {\n    return \"/\" + posix;\n  }\n\n  return posix;\n}\n\nconst Status = {\n  NOT_IMPORTED: false,\n  DYNAMIC: 'dynamic',\n  STATIC: 'static',\n};\n\n// Files start with file.imported === false. As we scan the dependency\n// graph, a file can get promoted to \"dynamic\" or \"static\" to indicate\n// that it has been imported by other modules. The \"dynamic\" status trumps\n// false, and \"static\" trumps both \"dynamic\" and false. A file can never\n// be demoted to a lower status after it has been promoted.\nconst importedStatusOrder = [\n  Status.NOT_IMPORTED,\n  Status.DYNAMIC,\n  Status.STATIC,\n];\n\n// Set each file.imported status to the maximum status of provided files.\nfunction alignImportedStatuses(...files: File[]) {\n  const maxIndex = Math.max(...files.map(\n    file => importedStatusOrder.indexOf(file.imported)));\n  const maxStatus = importedStatusOrder[maxIndex];\n  files.forEach(file => file.imported = maxStatus);\n}\n\nfunction getParentStatus(importInfos: ImportInfo[]) {\n  return importInfos.some(entry => !entry.parentWasDynamic)\n    ? Status.STATIC\n    : Status.DYNAMIC;\n}\n\nfunction isHigherStatus(\n  newStatus: string | boolean,\n  previousStatus: string | boolean,\n) {\n  return importedStatusOrder.indexOf(newStatus) >\n    importedStatusOrder.indexOf(previousStatus);\n}\n\n// Set file.imported to status if status has a higher index than the\n// current value of file.imported.\nfunction setImportedStatus(file: File, status: string | boolean) {\n  if (isHigherStatus(status, file.imported)) {\n    file.imported = status;\n  }\n}\n\n// Map from SHA (which is already calculated, so free for us)\n// to the results of calling findImportedModuleIdentifiers.\n// Each entry is an array of strings, and this is a case where\n// the computation is expensive but the output is very small.\n// The cache can be global because findImportedModuleIdentifiers\n// is a pure function, and that way it applies across instances\n// of ImportScanner (which do not persist across builds).\nconst LRU = require(\"lru-cache\");\nconst IMPORT_SCANNER_CACHE = new LRU({\n  max: 1024*1024,\n  length(ids: Record<string, ImportInfo>) {\n    let total = 40; // size of key\n    each(ids, (_info, id) => { total += id.length; });\n    return total;\n  }\n});\n\n// Stub used for entry point modules within node_modules directories on\n// the server. These stub modules delegate to native Node evaluation by\n// calling module.useNode() immediately, but it's important that we have\n// something to include in the bundle so that parent modules have\n// something to resolve.\nconst useNodeStub: Omit<RawFile, \"absPath\"> = function () {\n  const dataString = \"module.useNode();\";\n  const data = Buffer.from(dataString, \"utf8\");\n  return {\n    type: \"js\",\n    data,\n    dataString,\n    hash: sha1(data),\n    deps: Object.create(null),\n  };\n}();\n\nexport type ImportScannerOptions = {\n  name: string;\n  bundleArch: string;\n  extensions: string[];\n  sourceRoot: string;\n  nodeModulesPaths: string[];\n  cacheDir: string;\n}\n\ninterface RawFile {\n  absPath: string;\n  data: Buffer;\n  dataString: string;\n  hash: string;\n  jsonData?: Record<string, any>;\n}\n\ninterface File extends RawFile {\n  type: string;\n  sourcePath: string;\n  targetPath?: string;\n  servePath?: string;\n  absModuleId?: string;\n  deps?: Record<string, ImportInfo>;\n  lazy: boolean;\n  bare?: boolean;\n  // TODO Improve the sourceMap type.\n  sourceMap?: Record<string, any>;\n  implicit?: boolean;\n  imported: string | boolean;\n  [fakeSymbol]?: boolean;\n  reportPendingErrors?: () => number;\n  hasErrors?: boolean;\n  missingModules?: Record<string, ImportInfo>;\n  alias?: FileAlias;\n}\n\ntype FileAlias = {\n  path: string;\n  absModuleId?: string | false;\n}\n\ntype MissingMap = Record<string, ImportInfo[]>;\n// TODO Get this type from js-analyze.ts (after converting from .js).\ntype ImportInfo = {\n  dynamic: boolean;\n  possiblySpurious: boolean;\n  parentPath: string;\n  bundleArch?: string;\n  packageName?: string;\n  parentWasDynamic?: boolean;\n  helpers?: Record<string, boolean>;\n}\n\nexport default class ImportScanner {\n  public name: string;\n\n  private bundleArch: string;\n  private sourceRoot: string;\n  private nodeModulesPaths: string[];\n  private defaultHandlers: DefaultHandlers;\n  private resolver: Resolver;\n\n  private absPathToOutputIndex: Record<string, number> = Object.create(null);\n  private realPathToFiles: Record<string, File[]> = Object.create(null);\n  private realPathCache: Record<string, string> = Object.create(null);\n  private allMissingModules: MissingMap = Object.create(null);\n  private outputFiles: File[] = [];\n\n  constructor({\n    name,\n    bundleArch,\n    extensions,\n    sourceRoot,\n    nodeModulesPaths = [],\n    cacheDir,\n  }: ImportScannerOptions) {\n    this.name = name;\n    this.bundleArch = bundleArch;\n    this.sourceRoot = sourceRoot;\n    this.nodeModulesPaths = nodeModulesPaths;\n\n    this.defaultHandlers = new DefaultHandlers({\n      cacheDir,\n      bundleArch,\n    });\n\n    this.resolver = Resolver.getOrCreate({\n      caller: \"ImportScanner#constructor\",\n      sourceRoot,\n      targetArch: bundleArch,\n      extensions,\n      nodeModulesPaths,\n    });\n\n    // Since Resolver.getOrCreate may have returned a cached Resolver\n    // instance, it's important to update its statOrNull method so that it\n    // is bound to this ImportScanner object rather than the previous one.\n    this.resolver.statOrNull = (absPath) => {\n      const stat = optimisticStatOrNull(absPath);\n      if (stat) {\n        return stat;\n      }\n\n      const file = this.getFile(absPath);\n      if (file) {\n        return fakeFileStat;\n      }\n\n      return null;\n    };\n  }\n\n  private getFile(absPath: string): File | null {\n    absPath = absPath.toLowerCase();\n    if (has(this.absPathToOutputIndex, absPath)) {\n      return this.outputFiles[this.absPathToOutputIndex[absPath]];\n    }\n    return null;\n  }\n\n  private addFile(absPath: string, file: File): File | null {\n    if (! file || file[fakeSymbol]) {\n      // Return file without adding it to this.outputFiles.\n      return file;\n    }\n\n    const absLowerPath = absPath.toLowerCase();\n\n    if (has(this.absPathToOutputIndex, absLowerPath)) {\n      const old = this.outputFiles[\n        this.absPathToOutputIndex[absLowerPath]];\n\n      // If the old file is just an empty stub, let the new file take\n      // precedence over it.\n      if (old.implicit === true) {\n        return Object.assign(old, {\n          implicit: file.implicit || false\n        }, file);\n      }\n\n      // If the new file is just an empty stub, pretend the _addFile\n      // succeeded by returning the old file, so that we won't try to call\n      // _combineFiles needlessly.\n      if (file.implicit === true) {\n        return old;\n      }\n\n    } else {\n      this.absPathToOutputIndex[absLowerPath] =\n        this.outputFiles.push(file) - 1;\n\n      return file;\n    }\n\n    return null;\n  }\n\n  addInputFiles(files: File[]) {\n    files.forEach(file => {\n      this.checkSourceAndTargetPaths(file);\n\n      // Note: this absolute path may not necessarily exist on the file\n      // system, but any import statements or require calls in file.data\n      // will be interpreted relative to this path, so it needs to be\n      // something plausible. #6411 #6383\n      file.absPath = pathJoin(this.sourceRoot, file.sourcePath);\n\n      // This property can have values false, true, \"dynamic\" (which\n      // indicates that the file has been imported, but only dynamically).\n      file.imported = false;\n\n      file.absModuleId = file.absModuleId ||\n        this.getAbsModuleId(file.absPath);\n\n      if (! this.addFile(file.absPath, file)) {\n        // Collisions can happen if a compiler plugin calls addJavaScript\n        // multiple times with the same sourcePath. #6422\n        this.combineFiles(this.getFile(file.absPath)!, file);\n      }\n\n      this.addFileByRealPath(file, this.realPath(file.absPath));\n    });\n\n    return this;\n  }\n\n  private addFileByRealPath(file: File, realPath: string) {\n    if (! has(this.realPathToFiles, realPath)) {\n      this.realPathToFiles[realPath] = [];\n    }\n\n    const files = this.realPathToFiles[realPath];\n\n    if (files.indexOf(file) < 0) {\n      files.push(file);\n    }\n\n    return file;\n  }\n\n  private getInfoByRealPath(realPath: string): RawFile | null {\n    const files = this.realPathToFiles[realPath];\n    if (files && files.length > 0) {\n      const firstFile = files[0];\n      const dataString = this.getDataString(firstFile);\n      return {\n        absPath: realPath,\n        data: firstFile.data,\n        dataString: dataString,\n        hash: firstFile.hash,\n      };\n    }\n    return null;\n  }\n\n  private realPath(absPath: string) {\n    if (has(this.realPathCache, absPath)) {\n      return this.realPathCache[absPath];\n    }\n\n    let relativePath = pathRelative(this.sourceRoot, absPath);\n    if (relativePath.startsWith(\"..\") || relativePath.startsWith('/')) {\n      // If the absPath is outside this.sourceRoot, assume it's real.\n      return this.realPathCache[absPath] = absPath;\n    }\n\n    let foundSymbolicLink = false;\n\n    while (! foundSymbolicLink) {\n      const testPath = pathJoin(this.sourceRoot, relativePath);\n      if (testPath === this.sourceRoot) {\n        // Don't test the sourceRoot itself.\n        break;\n      }\n\n      const lstat = optimisticLStatOrNull(testPath);\n      if (lstat && lstat.isSymbolicLink()) {\n        foundSymbolicLink = true;\n        break\n      }\n\n      relativePath = pathDirname(relativePath);\n    }\n\n    if (foundSymbolicLink) {\n      // Call the actual realpathOrNull function only if there were any\n      // symlinks involved in the relative path within this.sourceRoot.\n      const realPath = realpathOrNull(absPath);\n      if (! realPath) {\n        // If we couldn't resolve the real path, fall back to the given\n        // absPath, and avoid caching.\n        return absPath;\n      }\n      return this.realPathCache[absPath] = realPath;\n    }\n\n    return this.realPathCache[absPath] = absPath;\n  }\n\n  // Make sure file.sourcePath is defined, and handle the possibility that\n  // file.targetPath differs from file.sourcePath.\n  private checkSourceAndTargetPaths(file: File) {\n    file.sourcePath = this.getSourcePath(file);\n\n    if (! isString(file.targetPath)) {\n      return;\n    }\n\n    file.targetPath = pathNormalize(pathJoin(\".\", file.targetPath));\n\n    if (file.targetPath !== file.sourcePath) {\n      const absSourcePath = pathJoin(this.sourceRoot, file.sourcePath);\n      const absTargetPath = pathJoin(this.sourceRoot, file.targetPath);\n\n      const absSourceId = this.getAbsModuleId(absSourcePath);\n      const absTargetId = this.getAbsModuleId(absTargetPath);\n\n      if (!absSourceId || !absTargetId) {\n        return;\n      }\n\n      // If file.targetPath differs from file.sourcePath, generate a new\n      // file object with that .sourcePath that imports the original file.\n      // This allows either the .sourcePath or the .targetPath to be used\n      // when importing the original file, and also allows multiple files\n      // to have the same .sourcePath but different .targetPaths.\n      const sourceFile = this.getFile(absSourcePath) || this.addFile(absSourcePath, {\n        ...file,\n        servePath: stripLeadingSlash(absSourceId),\n        absModuleId: absSourceId,\n        data: emptyData,\n        dataString: emptyDataString,\n        deps: Object.create(null),\n        lazy: true,\n        imported: false,\n        implicit: true,\n      })!;\n\n      // Make sure the original file gets installed at the target path\n      // instead of the source path.\n      file.absModuleId = absTargetId;\n      file.sourcePath = file.targetPath;\n\n      // If the sourceFile was not generated implicitly above, then it\n      // must have been explicitly added as a source module, so we should\n      // not override or modify its contents. #10233\n      if (sourceFile.implicit !== true) {\n        return;\n      }\n\n      const relativeId = this.getRelativeImportId(\n        absSourceId,\n        absTargetId,\n      );\n\n      // Set the contents of the source module to import the target\n      // module(s), combining their exports on the source module's exports\n      // object using the module.link live binding system. This is better\n      // than `Object.assign(exports, require(relativeId))` because it\n      // allows the exports to change in the future, and better than\n      // `module.exports = require(relativeId)` because it preserves the\n      // original module.exports object, avoiding problems with circular\n      // dependencies (#9176, #9190).\n      //\n      // If there could be only one target module, we could do something\n      // less clever here (like using an identifier string alias), but\n      // unfortunately we have to tolerate the possibility of a compiler\n      // plugin calling inputFile.addJavaScript multiple times for the\n      // same source file (see discussion in #9176), with different target\n      // paths, code, laziness, etc.\n      sourceFile.dataString = this.getDataString(sourceFile) +\n        // The + in \"*+\" indicates that the \"default\" property should be\n        // included as well as any other re-exported properties.\n        \"module.link(\" + JSON.stringify(relativeId) + ', { \"*\": \"*+\" });\\n';\n\n      sourceFile.data = Buffer.from(sourceFile.dataString, \"utf8\");\n      sourceFile.hash = sha1(sourceFile.data);\n      sourceFile.deps = sourceFile.deps || Object.create(null);\n      sourceFile.deps![relativeId] = {\n        dynamic: false,\n        possiblySpurious: false,\n        parentPath: absSourcePath,\n      };\n    }\n  }\n\n  // Concatenate the contents of oldFile and newFile, combining source\n  // maps and updating all other properties appropriately. Once this\n  // combination is done, oldFile should be kept and newFile discarded.\n  private combineFiles(oldFile: File, newFile: File) {\n    const scanner = this;\n\n    function checkProperty(name: \"lazy\" | \"bare\") {\n      if (has(oldFile, name)) {\n        if (! has(newFile, name)) {\n          newFile[name] = oldFile[name]!;\n        }\n      } else if (has(newFile, name)) {\n        oldFile[name] = newFile[name]!;\n      }\n\n      if (oldFile[name] !== newFile[name]) {\n        const fuzzyCase =\n          oldFile.sourcePath.toLowerCase() === newFile.sourcePath.toLowerCase();\n\n        throw new Error(\n          \"Attempting to combine different files\" +\n            ( fuzzyCase ? \" (is the filename case slightly different?)\" : \"\") +\n            \":\\n\" +\n            inspect(omit(oldFile, \"dataString\")) + \"\\n\" +\n            inspect(omit(newFile, \"dataString\")) + \"\\n\"\n        );\n      }\n    }\n\n    // Since we're concatenating the files together, they must be either\n    // both lazy or both eager. Same for bareness.\n    checkProperty(\"lazy\");\n    checkProperty(\"bare\");\n\n    function getChunk(file: File) {\n      if (file.sourceMap) {\n        const consumer = Promise.await(new SourceMapConsumer(file.sourceMap));\n        const node = SourceNode.fromStringWithSourceMap(\n          scanner.getDataString(file),\n          consumer\n        );\n        consumer.destroy();\n        return node;\n      } else {\n        return scanner.getDataString(file);\n      }\n    }\n\n    const {\n      code: combinedDataString,\n      map: combinedSourceMap,\n    } = new SourceNode(null, null, null, [\n      getChunk(oldFile),\n      \"\\n\\n\",\n      getChunk(newFile)\n    ]).toStringWithSourceMap({\n      file: oldFile.servePath || newFile.servePath\n    });\n\n    oldFile.dataString = combinedDataString;\n    oldFile.data = Buffer.from(oldFile.dataString, \"utf8\");\n    oldFile.hash = sha1(oldFile.data);\n\n    alignImportedStatuses(oldFile, newFile);\n\n    oldFile.sourceMap = combinedSourceMap.toJSON();\n    if (! oldFile.sourceMap!.mappings) {\n      oldFile.sourceMap = void 0;\n    }\n  }\n\n  scanImports() {\n    this.outputFiles.forEach(file => {\n      if (! file.lazy) {\n        this.scanFile(file);\n      }\n    });\n\n    return this;\n  }\n\n  scanMissingModules(missingModules: MissingMap) {\n    assert.ok(missingModules);\n    assert.ok(typeof missingModules === \"object\");\n    assert.ok(! Array.isArray(missingModules));\n\n    const newlyMissing = Object.create(null);\n    const newlyAdded = Object.create(null);\n\n    if (! isEmpty(missingModules)) {\n      const previousAllMissingModules = this.allMissingModules;\n      this.allMissingModules = newlyMissing;\n\n      Object.keys(missingModules).forEach(id => {\n        let staticImportInfo: ImportInfo | null = null;\n        let dynamicImportInfo: ImportInfo | null = null;\n\n        // Although it would be logically valid to call this._scanFile for\n        // each and every importInfo object, there can be a lot of them\n        // (hundreds, maybe thousands). The only relevant difference is\n        // whether the file is being scanned as a dynamic import or not,\n        // so we can get away with calling this._scanFile at most twice,\n        // with a representative importInfo object of each kind.\n        missingModules[id].some(importInfo => {\n          if (importInfo.parentWasDynamic ||\n              importInfo.dynamic) {\n            dynamicImportInfo = dynamicImportInfo || importInfo;\n          } else {\n            staticImportInfo = staticImportInfo || importInfo;\n          }\n\n          // Stop when/if both variables have been initialized.\n          return staticImportInfo && dynamicImportInfo;\n        });\n\n        const fakeStub = {\n          type: \"js\",\n          sourcePath: \"fake.js\",\n          absPath: pathJoin(this.sourceRoot, \"fake.js\"),\n          data: emptyData,\n          dataString: emptyDataString,\n          hash: emptyHash,\n          [fakeSymbol]: true,\n          imported: false,\n          lazy: true,\n        }\n\n        if (staticImportInfo) {\n          this.scanFile({\n            ...fakeStub,\n            // By specifying the .deps property of this fake file ahead of\n            // time, we can avoid calling findImportedModuleIdentifiers in\n            // the _scanFile method, which is important because this file\n            // doesn't have a .data or .dataString property.\n            deps: { [id]: staticImportInfo },\n          }, false); // !forDynamicImport\n        }\n\n        if (dynamicImportInfo) {\n          this.scanFile({\n            ...fakeStub,\n            deps: { [id]: dynamicImportInfo },\n          }, true); // forDynamicImport\n        }\n      });\n\n      this.allMissingModules = previousAllMissingModules;\n\n      Object.keys(missingModules).forEach(id => {\n        if (! has(newlyMissing, id)) {\n          // We don't need to use ImportScanner.mergeMissing here because\n          // this is the first time newlyAdded[id] has been assigned.\n          newlyAdded[id] = missingModules[id];\n        }\n      });\n\n      // Remove previously seen missing module identifiers from\n      // newlyMissing and merge the new identifiers back into\n      // this.allMissingModules.\n      Object.keys(newlyMissing).forEach(id => {\n        const skipScan = has(previousAllMissingModules, id) &&\n          !isHigherStatus(\n            getParentStatus(newlyMissing[id]),\n            getParentStatus(previousAllMissingModules[id]));\n\n        if (skipScan) {\n          delete newlyMissing[id];\n        } else {\n          ImportScanner.mergeMissing(\n            previousAllMissingModules,\n            { [id]: newlyMissing[id] }\n          );\n        }\n      });\n    }\n\n    return {\n      newlyAdded,\n      newlyMissing,\n    };\n  }\n\n  // Helper for copying the properties of source into target,\n  // concatenating values (which must be arrays) if a property already\n  // exists. The array elements should be importInfo objects, and will be\n  // deduplicated according to their .parentPath properties.\n  static mergeMissing(target: MissingMap, source: MissingMap) {\n    keys(source).forEach(id => {\n      const importInfoList = source[id];\n      const pathToIndex = Object.create(null);\n\n      if (! has(target, id)) {\n        target[id] = [];\n      } else {\n        target[id].forEach((importInfo, index) => {\n          pathToIndex[importInfo.parentPath] = index;\n        });\n      }\n\n      importInfoList.forEach(importInfo => {\n        const { parentPath } = importInfo;\n        if (typeof parentPath === \"string\") {\n          const index = pathToIndex[parentPath];\n          if (typeof index === \"number\") {\n            // If an importInfo object with this .parentPath is already\n            // present in the target[id] array, replace it.\n            target[id][index] = importInfo;\n            return;\n          }\n        }\n\n        target[id].push(importInfo);\n      });\n    });\n  }\n\n  private mergeFilesWithSameRealPath() {\n    Object.keys(this.realPathToFiles).forEach(realPath => {\n      const files = this.realPathToFiles[realPath];\n      if (! files || files.length < 2) {\n        return;\n      }\n\n      // We have multiple files that share the same realPath, so we need\n      // to figure out which one should actually contain the data, and\n      // which one(s) should merely be aliases to the data container.\n\n      let container = files[0];\n\n      // Make sure all the files share the same file.imported value, so\n      // that a statically bundled alias doesn't point to a dynamically\n      // bundled container, or vice-versa.\n      alignImportedStatuses(...files);\n\n      // Take the first file inside node_modules as the container. If none\n      // found, default to the first file in the list. It's important to\n      // let node_modules files be the containers if possible, since some\n      // npm packages rely on having module IDs that appear to be within a\n      // node_modules directory.\n      files.some(file => {\n        if (file.absModuleId &&\n            file.absModuleId.startsWith(\"/node_modules/\")) {\n          container = file;\n          return true;\n        }\n      });\n\n      const absContainerPath = pathJoin(this.sourceRoot, container.sourcePath);\n\n      // Alias every non-container file to container.absModuleId.\n      files.forEach(file => {\n        if (file !== container) {\n          file.alias = file.alias || { path: absContainerPath };\n          file.alias!.absModuleId = container.absModuleId;\n        }\n      });\n    });\n  }\n\n  getOutputFiles() {\n    this.mergeFilesWithSameRealPath();\n\n    // Return all installable output files that are either eager or\n    // imported (statically or dynamically).\n    return this.outputFiles.filter(file => {\n      return file.absModuleId &&\n        ! file[fakeSymbol] &&\n        ! file.hasErrors &&\n        (! file.lazy || file.imported);\n    });\n  }\n\n  private getSourcePath(file: File) {\n    let sourcePath = file.sourcePath;\n    if (sourcePath) {\n      if (pathIsAbsolute(sourcePath)) {\n        let relPath: string | undefined;\n        try {\n          relPath = pathRelative(this.sourceRoot, sourcePath);\n        } finally {\n          if (! relPath || relPath.startsWith(\"..\")) {\n            if (this.resolver.joinAndStat(this.sourceRoot, sourcePath)) {\n              // If sourcePath exists as a path relative to this.sourceRoot,\n              // strip away the leading / that made it look absolute.\n              return pathNormalize(pathJoin(\".\", sourcePath));\n            }\n\n            if (relPath) {\n              throw new Error(\"sourcePath outside sourceRoot: \" + sourcePath);\n            }\n\n            // If pathRelative threw an exception above, and we were not\n            // able to handle the problem, it will continue propagating\n            // from this finally block.\n          }\n        }\n\n        sourcePath = relPath;\n      }\n\n    } else if (file.servePath) {\n      sourcePath = convertToOSPath(file.servePath.replace(/^\\//, \"\"));\n\n    } else if ((file as any).path) {\n      sourcePath = (file as any).path;\n    }\n\n    return pathNormalize(pathJoin(\".\", sourcePath));\n  }\n\n  private findImportedModuleIdentifiers(\n    file: File,\n  ): Record<string, ImportInfo> {\n    if (IMPORT_SCANNER_CACHE.has(file.hash)) {\n      return IMPORT_SCANNER_CACHE.get(file.hash);\n    }\n\n    const result = findImportedModuleIdentifiers(\n      this.getDataString(file),\n      file.hash,\n    );\n\n    // there should always be file.hash, but better safe than sorry\n    if (file.hash) {\n      IMPORT_SCANNER_CACHE.set(file.hash, result);\n    }\n\n    return result;\n  }\n\n  private resolve(\n    parentFile: File,\n    id: string,\n    forDynamicImport = false,\n  ): Resolution | FileAlias {\n    const absPath = pathJoin(this.sourceRoot, parentFile.sourcePath);\n    const resolved = this.resolver.resolve(id, absPath);\n\n    if (resolved === \"missing\") {\n      return this.onMissing(parentFile, id, forDynamicImport);\n    }\n\n    if (resolved && resolved.packageJsonMap) {\n      const info = parentFile.deps![id];\n      info.helpers = info.helpers || {};\n\n      each(resolved.packageJsonMap, (pkg, path) => {\n        const packageJsonFile =\n          this.addPkgJsonToOutput(path, pkg, forDynamicImport);\n\n        if (! parentFile.absModuleId || ! packageJsonFile.absModuleId) {\n          // If parentFile is not installable, then we won't return it\n          // from getOutputFiles, so we don't need to worry about\n          // recording any parentFile.deps[id].helpers.\n          return;\n        }\n\n        const relativeId = this.getRelativeImportId(\n          parentFile.absModuleId,\n          packageJsonFile.absModuleId\n        );\n\n        // Although not explicitly imported, any package.json modules\n        // involved in resolving this import should be recorded as\n        // implicit \"helpers.\"\n        info.helpers![relativeId] = forDynamicImport;\n      });\n\n      // Any relevant package.json files must have already been added via\n      // this._addPkgJsonToOutput before we check whether this file has an\n      // .alias. In other words, the Resolver is responsible for including\n      // relevant package.json files in resolved.packageJsonMap so that\n      // they can be handled by the loop above.\n      const file = this.getFile(resolved.path);\n      if (file && file.alias) {\n        setImportedStatus(file, forDynamicImport ? Status.DYNAMIC : Status.STATIC);\n        return file.alias;\n      }\n    }\n\n    return resolved;\n  }\n\n  private getRelativeImportId(absParentId: string, absChildId: string) {\n    const relativeId = posixRelative(\n      posixDirname(absParentId),\n      absChildId\n    );\n\n    // If the result of pathRelative does not already start with a \".\" or\n    // a \"/\", prepend a \"./\" to make it a valid relative identifier\n    // according to CommonJS syntax.\n    if (\"./\".indexOf(relativeId.charAt(0)) < 0) {\n      return \"./\" + relativeId;\n    }\n\n    return relativeId;\n  }\n\n  private scanFile(file: File, forDynamicImport = false) {\n    if (file.imported === \"static\") {\n      // If we've already scanned this file non-dynamically, then we don't\n      // need to scan it again.\n      return;\n    }\n\n    if (forDynamicImport &&\n        file.imported === Status.DYNAMIC) {\n      // If we've already scanned this file dynamically, then we don't\n      // need to scan it dynamically again.\n      return;\n    }\n\n    // Set file.imported to a truthy value (either \"dynamic\" or true).\n    setImportedStatus(file, forDynamicImport ? Status.DYNAMIC : Status.STATIC);\n\n    if (file.reportPendingErrors &&\n        file.reportPendingErrors() > 0) {\n      file.hasErrors = true;\n      // Any errors reported to InputFile#error were saved but not\n      // reported at compilation time. Now that we know the file has been\n      // imported, it's time to report those errors.\n      return;\n    }\n\n    try {\n      file.deps = file.deps || this.findImportedModuleIdentifiers(file);\n    } catch (e) {\n      if (e.$ParseError) {\n        (buildmessage as any).error(e.message, {\n          file: file.sourcePath,\n          line: e.loc.line,\n          column: e.loc.column,\n        });\n        return;\n      }\n      throw e;\n    }\n\n    each(file.deps, (info: ImportInfo, id: string) => {\n      // Asynchronous module fetching only really makes sense in the\n      // browser (even though it works equally well on the server), so\n      // it's better if forDynamicImport never becomes true on the server.\n      const dynamic = this.isWebBrowser() &&\n        (forDynamicImport ||\n         info.parentWasDynamic ||\n         info.dynamic);\n\n      const resolved = this.resolve(file, id, dynamic);\n      const absImportedPath = resolved && resolved !== \"missing\" && resolved.path;\n      if (! absImportedPath) {\n        return;\n      }\n\n      let depFile = this.getFile(absImportedPath);\n      if (depFile) {\n        // We should never have stored a fake file in this.outputFiles, so\n        // it's surprising if depFile[fakeSymbol] is true.\n        assert.notStrictEqual(depFile[fakeSymbol], true);\n\n        // If the module is an implicit package.json stub, update to the\n        // explicit version now.\n        if (depFile.jsonData &&\n            depFile.absModuleId &&\n            depFile.absModuleId.endsWith(\"/package.json\") &&\n            depFile.implicit === true) {\n          const file = this.readPackageJson(absImportedPath);\n          if (file) {\n            depFile.implicit = false;\n            Object.assign(depFile, file);\n          }\n        }\n\n        // If depFile has already been scanned, this._scanFile will return\n        // immediately thanks to the depFile.imported-checking logic at\n        // the top of the method.\n        this.scanFile(depFile, dynamic);\n\n        return;\n      }\n\n      depFile = this.readDepFile(absImportedPath);\n      if (! depFile) {\n        return;\n      }\n\n      // Append this file to the output array and record its index.\n      this.addFile(absImportedPath, depFile);\n\n      // Recursively scan the module's imported dependencies.\n      this.scanFile(depFile, dynamic);\n    });\n  }\n\n  isWeb() {\n    // Returns true for web.cordova as well as web.browser.\n    return ! archMatches(this.bundleArch, \"os\");\n  }\n\n  isWebBrowser() {\n    return archMatches(this.bundleArch, \"web.browser\");\n  }\n\n  private getDataString(file: File) {\n    if (typeof file.dataString === \"string\") {\n      return file.dataString;\n    }\n\n    const rawDataString = file.data.toString(\"utf8\");\n    if (file.type === \"js\") {\n      // Avoid compiling .js file with Reify when all we want is a string\n      // version of file.data.\n      file.dataString = stripHashBang(rawDataString);\n    } else {\n      file.dataString = rawDataString;\n      file.dataString = this.defaultHandlers.call(file.type as any, file);\n    }\n\n    if (! (file.data instanceof Buffer) ||\n        file.dataString !== rawDataString) {\n      file.data = Buffer.from(file.dataString, \"utf8\");\n    }\n\n    return file.dataString;\n  }\n\n  private readFile(absPath: string) {\n    const data = optimisticReadFile(absPath) as Buffer;\n    const info: RawFile = {\n      absPath,\n      data,\n      dataString: data.toString(\"utf8\"),\n      hash: optimisticHashOrNull(absPath)!,\n    };\n\n    // Same logic/comment as stripBOM in node/lib/module.js:\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (info.dataString.charCodeAt(0) === 0xfeff) {\n      info.dataString = info.dataString.slice(1);\n      info.data = Buffer.from(info.dataString, \"utf8\");\n      info.hash = sha1(info.data);\n    }\n\n    return info;\n  }\n\n  private readPackageJson(absPath: string) {\n    try {\n      var info = this.readFile(absPath);\n    } catch (e) {\n      if (e.code !== \"ENOENT\") throw e;\n      return null;\n    }\n\n    const jsonData = JSON.parse(info.dataString);\n\n    Object.keys(jsonData).forEach(key => {\n      // Strip root properties that start with an underscore, since these\n      // are \"private\" npm-specific properties, not added by other package\n      // managers like yarn, and they may introduce nondeterminism into\n      // the Meteor build. #9878 #9903\n      if (key.startsWith(\"_\")) {\n        delete jsonData[key];\n      }\n    });\n\n    info.dataString = jsonDataToCommonJS(jsonData);\n    info.data = Buffer.from(info.dataString, \"utf8\");\n    info.hash = sha1(info.data);\n    info.jsonData = jsonData;\n\n    return info;\n  }\n\n  private readModule(absPath: string): RawFile | null {\n    const dotExt = pathExtname(absPath).toLowerCase();\n\n    if (dotExt === \".node\") {\n      const dataString = \"throw new Error(\" + JSON.stringify(\n        this.isWeb()\n          ? \"cannot load native .node modules on the client\"\n          : \"module.useNode() must succeed for native .node modules\"\n      ) + \");\\n\";\n\n      const data = Buffer.from(dataString, \"utf8\");\n      const hash = sha1(data);\n\n      return { absPath, data, dataString, hash };\n    }\n\n    try {\n      var info = this.readFile(absPath);\n    } catch (e) {\n      if (e.code !== \"ENOENT\") throw e;\n      return null;\n    }\n\n    const dataString = info.dataString;\n\n    let ext = dotExt.slice(1);\n    if (! has(DefaultHandlers.prototype, ext)) {\n      if (canBeParsedAsPlainJS(dataString, info.hash)) {\n        ext = \"js\";\n      } else {\n        return null;\n      }\n    }\n\n    info.dataString = this.defaultHandlers.call(ext as any, info);\n    if (info.dataString !== dataString) {\n      info.data = Buffer.from(info.dataString, \"utf8\");\n    }\n\n    return info;\n  }\n\n  private readDepFile(absPath: string): File | null {\n    const absModuleId = this.getAbsModuleId(absPath);\n    if (! absModuleId) {\n      // The given path cannot be installed on this architecture.\n      return null;\n    }\n\n    const realPath = this.realPath(absPath);\n\n    let rawFile = this.getInfoByRealPath(realPath);\n    if (rawFile) {\n      // If we already have a file with the same real path, use its data\n      // rather than reading the file again, or generating a stub. This\n      // logic enables selective compilation of node_modules in an elegant\n      // way: just expose the package directory within the application\n      // (outside of node_modules) using a symlink, so that it will be\n      // compiled as application code. When the package is imported from\n      // node_modules, the compiled version will be used instead of the\n      // raw version found in node_modules. See also:\n      // https://github.com/meteor/meteor-feature-requests/issues/6\n\n    } else if (this.shouldUseNode(absModuleId, absPath)) {\n      // On the server, modules in node_modules directories will be\n      // handled natively by Node, so we just need to generate a stub\n      // module that calls module.useNode(), rather than calling\n      // this._readModule to read the actual module file. Note that\n      // useNodeStub includes an empty .deps property, which will make\n      // this._scanFile(depFile, dynamic) return immediately.\n      rawFile = {\n        ...useNodeStub,\n        absPath,\n      };\n\n    } else {\n      rawFile = absModuleId.endsWith(\"/package.json\")\n        ? this.readPackageJson(absPath)\n        : this.readModule(absPath);\n\n      // If the module is not readable, _readModule may return null.\n      // Otherwise it will return { data, dataString, hash }.\n      if (! rawFile) {\n        return null;\n      }\n    }\n\n    const depFile: File = {\n      ...rawFile,\n      type: \"js\",\n      sourcePath: pathRelative(this.sourceRoot, absPath),\n      absModuleId,\n      servePath: stripLeadingSlash(absModuleId),\n      lazy: true,\n      // Setting depFile.imported = false is necessary so that\n      // this._scanFile(depFile, dynamic) doesn't think the file has been\n      // scanned already and return immediately.\n      imported: false,\n    };\n\n    this.addFileByRealPath(depFile, realPath);\n\n    return depFile;\n  }\n\n  // Similar to logic in Module.prototype.useNode as defined in\n  // packages/modules-runtime/server.js. Introduced to fix issue #10122.\n  private shouldUseNode(absModuleId: string, absPath: string) {\n    if (this.isWeb()) {\n      // Node should never be used in a browser, obviously.\n      return false;\n    }\n\n    const parts = absModuleId.split(\"/\");\n    let start = 0;\n\n    // Tolerate leading / character.\n    if (parts[start] === \"\") ++start;\n\n    // Meteor package modules include a node_modules component in their\n    // absolute module identifiers, but that doesn't mean those modules\n    // should be evaluated by module.useNode().\n    if (parts[start] === \"node_modules\" &&\n        parts[start + 1] === \"meteor\") {\n      start += 2;\n    }\n\n    // If the remaining parts do not include node_modules, then this\n    // module was not installed by npm, so we should not try to evaluate\n    // it natively in Node on the server.\n    if (parts.indexOf(\"node_modules\", start) < 0) {\n      return false;\n    }\n\n    // Below this point, we know we're dealing with a module in\n    // node_modules, which means we should try to use module.useNode() to\n    // evaluate the module natively in Node, except if the module is an\n    // ESM module, because then the module cannot be imported using\n    // require (as of Node 12.16.0), so module.useNode() will not work.\n\n    const dotExt = pathExtname(absPath).toLowerCase();\n\n    if (dotExt === \".mjs\") {\n      // Although few npm packages actually use .mjs, Node will always\n      // interpret these files as ESM modules, so we can return early.\n      return false;\n    }\n\n    if (dotExt === \".json\") {\n      // There's no benefit to using Node to evaluate JSON modules, since\n      // there's nothing Node-specific about the parsing of JSON.\n      return false;\n    }\n\n    if (dotExt === \".js\") {\n      const relDir = pathRelative(this.sourceRoot, pathDirname(absPath));\n      const pkgJsonArray =\n        optimisticLookupPackageJsonArray(this.sourceRoot, relDir);\n      // Setting \"type\":\"module\" in package.json makes Node treat .js\n      // files within the package as ESM modules.\n      if (pkgJsonArray.some(pkgJson => pkgJson?.type === \"module\")) {\n        return false;\n      }\n    }\n\n    // Everything else (.node, .wasm, whatever) needs to be handled\n    // natively by Node.\n    return true;\n  }\n\n  // Returns an absolute module identifier indicating where to install the\n  // given file via meteorInstall. May return undefined if the file should\n  // not be installed on the current architecture.\n  private getAbsModuleId(absPath: string) {\n    let path =\n      this.getNodeModulesAbsModuleId(absPath) ||\n      this.getSourceRootAbsModuleId(absPath);\n\n    if (! path) {\n      return;\n    }\n\n    if (this.name) {\n      // If we're bundling a package, prefix path with\n      // node_modules/<package name>/.\n      path = pathJoin(\n        \"node_modules\",\n        \"meteor\",\n        this.name.replace(/^local-test[:_]/, \"\"),\n        path,\n      );\n    }\n\n    // Install paths should always be delimited by /.\n    return ensureLeadingSlash(path);\n  }\n\n  private getNodeModulesAbsModuleId(absPath: string) {\n    let absModuleId: string | undefined;\n\n    this.nodeModulesPaths.some(path => {\n      const relPathWithinNodeModules = pathRelative(path, absPath);\n\n      if (\n        relPathWithinNodeModules.startsWith(\"..\") ||\n        relPathWithinNodeModules.startsWith('/')\n      ) {\n        // absPath is not a subdirectory of path.\n        return false;\n      }\n\n      // Install the module into the local node_modules directory within\n      // this app or package.\n      absModuleId = pathJoin(\n        \"node_modules\",\n        relPathWithinNodeModules\n      );\n      return true;\n    });\n\n    return absModuleId && ensureLeadingSlash(absModuleId);\n  }\n\n  private getSourceRootAbsModuleId(absPath: string) {\n    const relPath = pathRelative(this.sourceRoot, absPath);\n\n    if (relPath.startsWith(\"..\")) {\n      // absPath is not a subdirectory of this.sourceRoot.\n      return;\n    }\n\n    const dirs = relPath.split(\"/\");\n    dirs.pop(); // Discard the module's filename.\n    while (dirs[0] === \"\") {\n      dirs.shift();\n    }\n\n    const isApp = ! this.name;\n    const bundlingForWeb = this.isWeb();\n\n    const topLevelDir = dirs[0];\n    if (topLevelDir === \"private\" ||\n        topLevelDir === \"packages\" ||\n        topLevelDir === \"programs\" ||\n        topLevelDir === \"cordova-build-override\") {\n      // Don't load anything from these special top-level directories\n      return;\n    }\n\n    for (let dir of dirs) {\n      if (dir.charAt(0) === \".\") {\n        // Files/directories whose names start with a dot are never loaded\n        return;\n      }\n\n      if (isApp) {\n        if (bundlingForWeb) {\n          if (dir === \"server\") {\n            // If we're bundling an app for a client architecture, any files\n            // contained by a server-only directory that is not contained by\n            // a node_modules directory must be ignored.\n            return;\n          }\n        } else if (dir === \"client\") {\n          // If we're bundling an app for a server architecture, any files\n          // contained by a client-only directory that is not contained by\n          // a node_modules directory must be ignored.\n          return;\n        }\n      }\n\n      if (dir === \"node_modules\") {\n        // Accept any file within a node_modules directory.\n        return ensureLeadingSlash(relPath);\n      }\n    }\n\n    return ensureLeadingSlash(relPath);\n  }\n\n  // Called by this.resolver when a module identifier cannot be resolved.\n  private onMissing(\n    parentFile: File,\n    id: string,\n    forDynamicImport = false,\n  ): Resolution | FileAlias {\n    const isApp = ! this.name;\n    const absParentPath = pathJoin(\n      this.sourceRoot,\n      parentFile.sourcePath,\n    );\n\n    if (isApp &&\n        Resolver.isNative(id) &&\n        this.isWeb()) {\n      // To ensure the native module can be evaluated at runtime, register\n      // a dependency on meteor-node-stubs/deps/<id>.js.\n      const stubId = Resolver.getNativeStubId(id);\n      if (isString(stubId) && stubId !== id) {\n        const info = parentFile.deps![id];\n\n        // Although not explicitly imported, any stubs associated with\n        // this native import should be recorded as implicit \"helpers.\"\n        info.helpers = info.helpers || {};\n        info.helpers[stubId] = forDynamicImport;\n\n        return this.resolve(parentFile, stubId, forDynamicImport);\n      }\n    }\n\n    const info: ImportInfo = {\n      packageName: this.name,\n      parentPath: absParentPath,\n      bundleArch: this.bundleArch,\n      possiblySpurious: false,\n      dynamic: false,\n      // When we later attempt to resolve this id in the application's\n      // node_modules directory or in other packages, we need to remember\n      // if the parent module was imported dynamically, since that makes\n      // this import effectively dynamic, even if the parent module\n      // imported the given id with a static import or require.\n      parentWasDynamic: forDynamicImport,\n    };\n\n    if (parentFile &&\n        parentFile.deps &&\n        has(parentFile.deps, id)) {\n      const importInfo = parentFile.deps[id];\n      info.possiblySpurious = importInfo.possiblySpurious;\n      // Remember that this property only indicates whether or not the\n      // parent module used a dynamic import(...) to import this module.\n      // Even if info.dynamic is false (because the parent module used a\n      // static import or require for this import), this module may still\n      // be effectively dynamic if the parent was imported dynamically, as\n      // indicated by info.parentWasDynamic.\n      info.dynamic = importInfo.dynamic;\n    }\n\n    // If the imported identifier is neither absolute nor relative, but\n    // top-level, then it might be satisfied by a package installed in\n    // the top-level node_modules directory, and we should record the\n    // missing dependency so that we can include it in the app bundle.\n    if (parentFile) {\n      const missing =\n        parentFile.missingModules ||\n        Object.create(null);\n      missing[id] = info;\n      parentFile.missingModules = missing;\n    }\n\n    ImportScanner.mergeMissing(\n      this.allMissingModules,\n      { [id]: [info] }\n    );\n\n    return null;\n  }\n\n  private addPkgJsonToOutput(\n    pkgJsonPath: string,\n    pkg: Record<string, any>,\n    forDynamicImport = false,\n  ): File {\n    const file = this.getFile(pkgJsonPath);\n\n    if (file) {\n      // If the file already exists, just update file.imported according\n      // to the forDynamicImport parameter.\n      setImportedStatus(file, forDynamicImport ? Status.DYNAMIC : Status.STATIC);\n      return file;\n    }\n\n    const dataString = jsonDataToCommonJS(pkg);\n    const data = Buffer.from(dataString, \"utf8\");\n    const relPkgJsonPath = pathRelative(this.sourceRoot, pkgJsonPath);\n    const absModuleId = this.getAbsModuleId(pkgJsonPath);\n\n    const pkgFile: File = {\n      type: \"js\", // We represent the JSON module with JS.\n      absPath: pkgJsonPath,\n      data,\n      dataString,\n      jsonData: pkg,\n      deps: {}, // Avoid accidentally re-scanning this file.\n      sourcePath: relPkgJsonPath,\n      absModuleId,\n      servePath: stripLeadingSlash(absModuleId),\n      hash: sha1(data),\n      lazy: true,\n      imported: forDynamicImport ? Status.DYNAMIC : Status.STATIC,\n      // Since _addPkgJsonToOutput is only ever called for package.json\n      // files that are involved in resolving package directories, and pkg\n      // is only a subset of the information in the actual package.json\n      // module, we mark it as imported implicitly, so that the subset can\n      // be overridden by the actual module if this package.json file is\n      // imported explicitly elsewhere.\n      implicit: true,\n    };\n\n    this.addFile(pkgJsonPath, pkgFile);\n\n    this.resolvePkgJsonBrowserAliases(pkgFile);\n\n    return pkgFile;\n  }\n\n  private resolvePkgJsonBrowserAliases(pkgFile: File) {\n    if (! this.isWeb()) {\n      return;\n    }\n\n    const browser = pkgFile.jsonData!.browser;\n    if (! isObject(browser)) {\n      return;\n    }\n\n    const deps = pkgFile.deps || (pkgFile.deps = Object.create(null));\n    const absPkgJsonPath = pathJoin(this.sourceRoot, pkgFile.sourcePath);\n\n    Object.keys(browser).forEach(sourceId => {\n      deps[sourceId] = deps[sourceId] || {};\n\n      // TODO What if sourceId is a top-level node_modules identifier?\n      const source = this.resolver.resolve(sourceId, absPkgJsonPath);\n      if (! source || source === \"missing\") {\n        return;\n      }\n\n      const file = this.getFile(source.path);\n      if (file && file.alias) {\n        // If we previously set an .alias for this file, assume it is\n        // complete and return early.\n        return;\n      }\n\n      const sourceAbsModuleId = this.getAbsModuleId(source.path);\n      if (! sourceAbsModuleId || ! pkgFile.absModuleId) {\n        return;\n      }\n\n      const hasAuthorityToCreateAlias =\n        this.areAbsModuleIdsInSamePackage(\n          pkgFile.absModuleId,\n          sourceAbsModuleId\n        );\n\n      // A package.json file's \"browser\" field can only establish aliases\n      // for modules contained by the same package.\n      if (! hasAuthorityToCreateAlias) {\n        return;\n      }\n\n      const targetId = browser[sourceId];\n      const alias: FileAlias = {\n        path: source.path,\n        absModuleId: sourceAbsModuleId,\n      };\n\n      if (typeof targetId === \"string\") {\n        deps[targetId] = deps[targetId] || {};\n\n        const target = this.resolver.resolve(targetId, absPkgJsonPath);\n        if (! target || target === \"missing\") {\n          return;\n        }\n\n        // Ignore useless self-referential browser aliases, to fix\n        // https://github.com/meteor/meteor/issues/10409.\n        if (target.id === source.id) {\n          return;\n        }\n\n        Object.assign(alias, target);\n        alias.absModuleId = this.getAbsModuleId(target.path);\n\n      } else if (targetId === false) {\n        // This is supposed to indicate the alias refers to an empty stub.\n        alias.absModuleId = false;\n\n      } else {\n        return;\n      }\n\n      if (file) {\n        file.alias = alias;\n      } else {\n        const relSourcePath = pathRelative(this.sourceRoot, source.path);\n\n        this.addFile(source.path, {\n          type: \"js\",\n          alias,\n          absPath: absPkgJsonPath,\n          data: emptyData,\n          dataString: emptyDataString,\n          hash: emptyHash,\n          sourcePath: relSourcePath,\n          absModuleId: sourceAbsModuleId,\n          servePath: stripLeadingSlash(sourceAbsModuleId),\n          lazy: true,\n          imported: false,\n          implicit: true,\n        });\n      }\n    });\n  }\n\n  private areAbsModuleIdsInSamePackage(path1: string, path2: string) {\n    if (! (isString(path1) && isString(path2))) {\n      return false;\n    }\n\n    // Enforce that the input paths look like absolute module identifiers.\n    assert.strictEqual(path1.charAt(0), \"/\");\n    assert.strictEqual(path2.charAt(0), \"/\");\n\n    function getPackageRoot(path: string) {\n      const parts = path.split(\"/\");\n      assert.strictEqual(parts[0], \"\");\n      const nmi = parts.lastIndexOf(\"node_modules\");\n      return parts.slice(0, nmi + 2).join(\"/\");\n    }\n\n    return getPackageRoot(path1) === getPackageRoot(path2);\n  }\n}\n\nconst ISp = ImportScanner.prototype as any;\n\n[ \"addPkgJsonToOutput\",\n  \"findImportedModuleIdentifiers\",\n  \"getAbsModuleId\",\n  \"readFile\",\n  \"realPath\",\n  \"resolve\",\n  \"resolvePkgJsonBrowserAliases\",\n  // We avoid profiling _scanFile here because it doesn't typically have\n  // much \"own time,\" and it gets called recursively, resulting in deeply\n  // nested METEOR_PROFILE output, which often obscures actual problems.\n  // \"_scanFile\",\n].forEach(name => {\n  ISp[name] = Profile(`ImportScanner#${name}`, ISp[name]);\n});\n\n[ // Include the package name in METEOR_PROFILE output for the following\n  // public methods:\n  \"scanImports\",\n  \"scanMissingModules\",\n].forEach(name => {\n  ISp[name] = Profile(function (this: ImportScanner) {\n    return `ImportScanner#${name} for ${this.name || \"the app\"}`;\n  }, ISp[name]);\n});\n"]}