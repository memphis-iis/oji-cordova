{"version":3,"file":"tools/isobuild/npm-discards.js.map","mappings":"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","names":["module","default","_defineProperty","link","files","hasOwn","Object","prototype","hasOwnProperty","NpmDiscards","constructor","discards","merge","shouldDiscard","candidatePath","isDirectory","lstat","currentPath","parentPath","pathDirname","pathBasename","packageName","call","relPath","pathRelative","pathJoin","pathSep","some","pattern","matches","into","from","keys","forEach","fromValue","intoValue","RegExp","push","Array","isArray","apply","test","charAt","indexOf","slice","includes","exportDefault"],"sourceRoot":"","sources":["tools/isobuild/npm-discards.ts"],"sourcesContent":["import * as files from \"../fs/files\";\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// This class encapsulates a structured specification of files and\n// directories that should be stripped from the node_modules directories\n// of Meteor packages during `meteor build`, as requested by calling\n// `Npm.discard` in package.js files.\nclass NpmDiscards {\n  private discards: Discards;\n\n  constructor() {\n    this.discards = {};\n  }\n\n  // Update the current specification of discarded files with additional\n  // patterns that should be discarded.\n  merge(discards: DiscardsInput): void {\n    merge(this.discards, discards);\n  }\n\n  shouldDiscard(candidatePath: string, isDirectory?: boolean): boolean {\n    if (isDirectory === void 0) {\n      isDirectory = files.lstat(candidatePath)?.isDirectory();\n    }\n\n    for (let currentPath = candidatePath, parentPath;\n         (parentPath = files.pathDirname(currentPath)) !== currentPath;\n         currentPath = parentPath) {\n      if (files.pathBasename(parentPath) === \"node_modules\") {\n        const packageName = files.pathBasename(currentPath);\n\n        if (hasOwn.call(this.discards, packageName)) {\n          let relPath = files.pathRelative(currentPath, candidatePath);\n\n          if (isDirectory) {\n            relPath = files.pathJoin(relPath, files.pathSep);\n          }\n\n          return this.discards[packageName].some(pattern =>\n            matches(pattern, relPath)\n          );\n        }\n\n        // Stop at the first ancestor node_modules directory we find.\n        break;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction merge(into: Discards, from: DiscardsInput): void {\n  Object.keys(from).forEach((packageName: string) => {\n    const fromValue = from[packageName];\n    const intoValue = hasOwn.call(into, packageName) && into[packageName];\n\n    if (typeof fromValue === \"string\" || fromValue instanceof RegExp) {\n      if (intoValue) {\n        intoValue.push(fromValue);\n      } else {\n        into[packageName] = [fromValue];\n      }\n\n    } else if (Array.isArray(fromValue)) {\n      if (intoValue) {\n        intoValue.push.apply(intoValue, fromValue);\n      } else {\n        // Make a defensive copy of any arrays passed to `Npm.strip`.\n        into[packageName] = Array.from(fromValue);\n      }\n    }\n  });\n}\n\n// TODO Improve this. For example we don't currently support wildcard\n// string patterns (just use a RegExp if you need that flexibility).\nfunction matches(pattern: DiscardPattern, relPath: string): boolean {\n  if (pattern instanceof RegExp) {\n    return pattern.test(relPath);\n  }\n\n  if (pattern.charAt(0) === files.pathSep) {\n    return relPath.indexOf(pattern.slice(1)) === 0;\n  }\n\n  return relPath.includes(pattern);\n}\n\nexport default NpmDiscards;\n"]}