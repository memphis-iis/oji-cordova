{"version":3,"sources":["/tools/runners/run-hmr.js"],"names":["module","export","HMRServer","WS","link","default","v","runLog","crypto","AssertionError","Anser","CordovaBuilder","constructor","proxy","hmrPath","secret","projectContext","cordovaServerPort","wsServer","connByArch","Object","create","started","changeSetsByArch","maxChangeSets","cacheKeys","trimmedArchUntil","firstBuild","createCordovaServerPort","appIdentifier","cordovaOrigin","start","Error","Server","noServer","server","on","req","res","head","url","handleUpgrade","conn","_handleWsConn","stop","close","registered","connArch","fromCordova","headers","origin","_message","message","JSON","parse","type","arch","appId","send","stringify","reason","secretsMatch","length","timingSafeEqual","Buffer","from","push","after","trimmedUntil","Math","Infinity","changeSets","reloadable","archChangeSets","newChanges","filter","linkedAt","archConns","index","indexOf","splice","_sendAll","values","forEach","conns","setAppState","state","lines","getLog","map","line","ansiToHtml","escapeForHtml","log","compare","getFileOutput","name","hmrAvailable","files","cacheKey","Date","now","previousCacheKey","sendEagerUpdate","changeset","eager","previous","findLastChangeset","_trimChangeSets","addedFiles","changedFiles","removedFilePaths","unreloadable","onlyReplaceableChanges","fileHashes","compareFiles","unreloadableHashes","couldCompare","saveFileDetails","file","content","toStringWithSourceMap","path","absModuleId","meteorInstallOptions","result","id","_createId","removed","random","_checkReloadable","bare","jsonData","previousHashes","Map","previousUnreloadable","currentFiles","currentHashes","unseenModules","fileConfig","ignoreHash","targetPath","sourcePath","implicit","sourceMap","mainModule","imported","alias","lazy","_inputHash","set","inputHash","config","previousInputHash","previousConfig","get","delete","Array","keys","unreloadableChanged","some","hash","i"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,SAAS,EAAC,MAAIA;AAAf,CAAd;AAAyC,IAAIC,EAAJ;AAAOH,MAAM,CAACI,IAAP,CAAY,IAAZ,EAAiB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,EAAE,GAACG,CAAH;AAAK;;AAAjB,CAAjB,EAAoC,CAApC;AAAuC,IAAIC,MAAJ;AAAWP,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACC,IAAAA,MAAM,GAACD,CAAP;AAAS;;AAArB,CAA3B,EAAkD,CAAlD;AAAqD,IAAIE,MAAJ;AAAWR,MAAM,CAACI,IAAP,CAAY,QAAZ,EAAqB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACE,IAAAA,MAAM,GAACF,CAAP;AAAS;;AAArB,CAArB,EAA4C,CAA5C;AAA+C,IAAIG,cAAJ;AAAmBT,MAAM,CAACI,IAAP,CAAY,QAAZ,EAAqB;AAACK,EAAAA,cAAc,CAACH,CAAD,EAAG;AAACG,IAAAA,cAAc,GAACH,CAAf;AAAiB;;AAApC,CAArB,EAA2D,CAA3D;AAA8D,IAAII,KAAJ;AAAUV,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACI,IAAAA,KAAK,GAACJ,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIK,cAAJ;AAAmBX,MAAM,CAACI,IAAP,CAAY,uBAAZ,EAAoC;AAACO,EAAAA,cAAc,CAACL,CAAD,EAAG;AAACK,IAAAA,cAAc,GAACL,CAAf;AAAiB;;AAApC,CAApC,EAA0E,CAA1E;;AAOrW,MAAMJ,SAAN,CAAgB;AACrBU,EAAAA,WAAW,OAEV;AAAA,QAFW;AACVC,MAAAA,KADU;AACHC,MAAAA,OADG;AACMC,MAAAA,MADN;AACcC,MAAAA,cADd;AAC8BC,MAAAA;AAD9B,KAEX;AACC,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKG,cAAL,GAAsBA,cAAtB;AAEA,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AAEA,SAAKG,QAAL,GAAgB,IAAhB;AACA,SAAKC,UAAL,GAAkBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAlB;AACA,SAAKC,OAAL,GAAe,KAAf;AAEA,SAAKC,gBAAL,GAAwBH,MAAM,CAACC,MAAP,CAAc,IAAd,CAAxB;AAEA,SAAKG,aAAL,GAAqB,GAArB;AACA,SAAKC,SAAL,GAAiBL,MAAM,CAACC,MAAP,CAAc,IAAd,CAAjB;AACA,SAAKK,gBAAL,GAAwBN,MAAM,CAACC,MAAP,CAAc,IAAd,CAAxB;AACA,SAAKM,UAAL,GAAkB,IAAlB;;AAEA,QAAI,CAACV,iBAAL,EAAwB;AACvBA,MAAAA,iBAAiB,GAAGN,cAAc,CAACiB,uBAAf,CACfZ,cAAc,CAACa,aADA,CAApB;AAGA;;AAED,SAAKC,aAAL,8BAAyCb,iBAAzC;AACD;;AAEDc,EAAAA,KAAK,GAAG;AACN,QAAI,CAAC,KAAKlB,KAAL,CAAWS,OAAhB,EAAyB;AACvB,YAAM,IAAIU,KAAJ,CAAU,yCAAV,CAAN;AACD;;AAED,SAAKd,QAAL,GAAgB,IAAIf,EAAE,CAAC8B,MAAP,CAAc;AAC5BC,MAAAA,QAAQ,EAAE;AADkB,KAAd,CAAhB;AAGA,SAAKrB,KAAL,CAAWsB,MAAX,CAAkBC,EAAlB,CAAqB,SAArB,EAAgC,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAClD,UAAIF,GAAG,CAACG,GAAJ,KAAY,KAAK1B,OAArB,EAA8B;AAC5B,aAAKI,QAAL,CAAcuB,aAAd,CAA4BJ,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA6CG,IAAD,IAAU;AACpD,eAAKC,aAAL,CAAmBD,IAAnB,EAAyBL,GAAzB;AACD,SAFD;AAGD;AACF,KAND;AAQA,SAAKf,OAAL,GAAe,IAAf;AACD;;AAEDsB,EAAAA,IAAI,GAAG;AACL,SAAK1B,QAAL,CAAc2B,KAAd;AACA,SAAK1B,UAAL,GAAkBC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAlB;AACD;;AAEDsB,EAAAA,aAAa,CAACD,IAAD,EAAOL,GAAP,EAAY;AACvB,QAAIS,UAAU,GAAG,KAAjB;AACA,QAAIC,QAAQ,GAAG,IAAf;AACA,QAAIC,WAAW,GAAG,KAAKlB,aAAL,IAAsBO,GAAG,CAACY,OAAJ,CAAYC,MAAZ,KAAuB,KAAKpB,aAApE;AAEAY,IAAAA,IAAI,CAACN,EAAL,CAAQ,SAAR,EAAoBe,QAAD,IAAc;AAC/B,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAhB;;AAEA,cAAQC,OAAO,CAACG,IAAhB;AACE,aAAK,UAAL;AAAiB;AACf,kBAAM;AAAEC,cAAAA,IAAF;AAAQC,cAAAA,KAAR;AAAe1C,cAAAA,MAAM,GAAG;AAAxB,gBAA+BqC,OAArC;;AAEA,gBAAIK,KAAK,KAAK,KAAKzC,cAAL,CAAoBa,aAAlC,EAAiD;AAC/C;AACAa,cAAAA,IAAI,CAACgB,IAAL,CAAUL,IAAI,CAACM,SAAL,CAAe;AACvBJ,gBAAAA,IAAI,EAAE,iBADiB;AAEvBK,gBAAAA,MAAM,EAAE;AAFe,eAAf,CAAV;AAID;;AAED,gBAAIC,YAAY,GAAG9C,MAAM,CAAC+C,MAAP,KAAkB,KAAK/C,MAAL,CAAY+C,MAA9B,IACjBtD,MAAM,CAACuD,eAAP,CAAuBC,MAAM,CAACC,IAAP,CAAYlD,MAAZ,CAAvB,EAA4CiD,MAAM,CAACC,IAAP,CAAY,KAAKlD,MAAjB,CAA5C,CADF;;AAGA,gBACE,CAACiC,WAAD,IACA,CAACa,YAFH,EAGE;AACAnB,cAAAA,IAAI,CAACgB,IAAL,CAAUL,IAAI,CAACM,SAAL,CAAe;AACvBJ,gBAAAA,IAAI,EAAE,iBADiB;AAEvBK,gBAAAA,MAAM,EAAE;AAFe,eAAf,CAAV;AAIAlB,cAAAA,IAAI,CAACG,KAAL;AACA;AACD;;AAED,iBAAK1B,UAAL,CAAgBqC,IAAhB,IAAwB,KAAKrC,UAAL,CAAgBqC,IAAhB,KAAyB,EAAjD;AACA,iBAAKrC,UAAL,CAAgBqC,IAAhB,EAAsBU,IAAtB,CAA2BxB,IAA3B;AACAK,YAAAA,QAAQ,GAAGS,IAAX;AACAV,YAAAA,UAAU,GAAG,IAAb;AACA;AACD;;AAED,aAAK,iBAAL;AAAwB;AACtB,gBAAI,CAACA,UAAL,EAAiB;AACf;AACA;AACA;AACA;AACD;;AACD,kBAAM;AAAEqB,cAAAA,KAAF;AAASX,cAAAA;AAAT,gBAAkBJ,OAAxB;AAEA,kBAAMgB,YAAY,GAAG,KAAK1C,gBAAL,CAAsB8B,IAAtB,KAA+Ba,IAAI,CAACC,QAAzD;;AACA,gBAAIF,YAAY,GAAGD,KAAnB,EAA0B;AACxB;AACAzB,cAAAA,IAAI,CAACgB,IAAL,CACEL,IAAI,CAACM,SAAL,CAAe;AACbJ,gBAAAA,IAAI,EAAE,SADO;AAEbgB,gBAAAA,UAAU,EAAE,CACV;AAAEC,kBAAAA,UAAU,EAAE;AAAd,iBADU;AAFC,eAAf,CADF;AAQA;AACD;;AAED,kBAAMC,cAAc,GAAG,KAAKlD,gBAAL,CAAsBiC,IAAtB,KAA+B,EAAtD;AACA,kBAAMkB,UAAU,GAAGD,cAAc,CAACE,MAAf,CAAsB,SAAkB;AAAA,kBAAjB;AAAEC,gBAAAA;AAAF,eAAiB;AACzD,qBAAOA,QAAQ,GAAGT,KAAlB;AACD,aAFkB,CAAnB;AAIAzB,YAAAA,IAAI,CAACgB,IAAL,CAAUL,IAAI,CAACM,SAAL,CAAe;AACvBJ,cAAAA,IAAI,EAAE,SADiB;AAEvBgB,cAAAA,UAAU,EAAEG;AAFW,aAAf,CAAV;AAKA;AACD;;AAED;AACE,gBAAM,IAAI1C,KAAJ,+BAAiCoB,OAAO,CAACG,IAAzC,EAAN;AAvEJ;AAyED,KA5ED,EALuB,CAmFvB;;AACAb,IAAAA,IAAI,CAACN,EAAL,CAAQ,OAAR,EAAiB,MAAM;AACrB,UAAI,CAACW,QAAL,EAAe;AACb;AACD;;AAED,YAAM8B,SAAS,GAAG,KAAK1D,UAAL,CAAgB4B,QAAhB,KAA6B,EAA/C;AACA,YAAM+B,KAAK,GAAGD,SAAS,CAACE,OAAV,CAAkBrC,IAAlB,CAAd;;AACA,UAAIoC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdD,QAAAA,SAAS,CAACG,MAAV,CACEF,KADF,EAEE,CAFF;AAID;AACF,KAbD;AAcD;;AAEDG,EAAAA,QAAQ,CAAC7B,OAAD,EAAU;AAChBhC,IAAAA,MAAM,CAAC8D,MAAP,CAAc,KAAK/D,UAAnB,EAA+BgE,OAA/B,CAAuCC,KAAK,IAAI;AAC9CA,MAAAA,KAAK,CAACD,OAAN,CAAczC,IAAI,IAAI;AACpBA,QAAAA,IAAI,CAACgB,IAAL,CAAUL,IAAI,CAACM,SAAL,CAAeP,OAAf,CAAV;AACD,OAFD;AAGD,KAJD;AAKD;;AAEDiC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAIA,KAAK,KAAK,OAAd,EAAuB;AACrB,YAAMC,KAAK,GAAGhF,MAAM,CAACiF,MAAP,GAAgBC,GAAhB,CAAoBC,IAAI,IAAI;AACxC,eAAOhF,KAAK,CAACiF,UAAN,CAAiBjF,KAAK,CAACkF,aAAN,CAAoBF,IAAI,CAACtC,OAAzB,CAAjB,CAAP;AACD,OAFa,CAAd;;AAGA,WAAK6B,QAAL,CAAc;AACZ1B,QAAAA,IAAI,EAAE,WADM;AAEZ+B,QAAAA,KAAK,EAAE,OAFK;AAGZO,QAAAA,GAAG,EAAEN;AAHO,OAAd;AAKD,KATD,MASO,IAAID,KAAK,KAAK,MAAd,EAAsB;AAC3B,WAAKL,QAAL,CAAc;AACZ1B,QAAAA,IAAI,EAAE,WADM;AAEZ+B,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID;AACF;;AAEDQ,EAAAA,OAAO,QAAgDC,aAAhD,EAA+D;AAAA,QAA9D;AAAEC,MAAAA,IAAF;AAAQxC,MAAAA,IAAR;AAAcyC,MAAAA,YAAd;AAA4BC,MAAAA,KAA5B;AAAmCC,MAAAA;AAAnC,KAA8D;;AACpE,QAAI,KAAKxE,UAAL,GAAkB,IAAtB,EAA4B;AAC1B,WAAKA,UAAL,GAAkByE,IAAI,CAACC,GAAL,EAAlB;AACD;;AAED,SAAK9E,gBAAL,CAAsBiC,IAAtB,IAA8B,KAAKjC,gBAAL,CAAsBiC,IAAtB,KAA+B,EAA7D;AACA,UAAM8C,gBAAgB,GAAG,KAAK7E,SAAL,WAAkB+B,IAAlB,cAA0BwC,IAA1B,EAAzB;;AAEA,QAAIM,gBAAgB,KAAKH,QAAzB,EAAmC;AACjC;AACD,KAVmE,CAYpE;AACA;AACA;;;AACA,UAAMI,eAAe,GAAIC,SAAD,IAAe;AACrC,UAAI,CAAC,KAAKrF,UAAL,CAAgBqC,IAAhB,CAAL,EAA4B;AAC1B;AACD;;AAED,WAAKrC,UAAL,CAAgBqC,IAAhB,EAAsB2B,OAAtB,CAA8BzC,IAAI,IAAI;AACpCA,QAAAA,IAAI,CAACgB,IAAL,CAAUL,IAAI,CAACM,SAAL,CAAe;AACvBJ,UAAAA,IAAI,EAAE,SADiB;AAEvBgB,UAAAA,UAAU,EAAE,CAACiC,SAAD,CAFW;AAGvBC,UAAAA,KAAK,EAAE;AAHgB,SAAf,CAAV;AAKD,OAND;AAOD,KAZD;;AAcA,SAAKhF,SAAL,WAAkB+B,IAAlB,cAA0BwC,IAA1B,KAAoCG,QAApC;AACA,UAAMO,QAAQ,GAAG,KAAKC,iBAAL,CAAuBX,IAAvB,EAA6BxC,IAA7B,KAAsC,EAAvD;;AAEA,QAAI,CAACyC,YAAL,EAAmB;AACjB,UAAIO,SAAS,GAAG;AACdR,QAAAA,IADc;AAEdxB,QAAAA,UAAU,EAAE,KAFE;AAGd2B,QAAAA,QAHc;AAId;AACAvB,QAAAA,QAAQ,EAAEwB,IAAI,CAACC,GAAL;AALI,OAAhB;AAOA,WAAK9E,gBAAL,CAAsBiC,IAAtB,EAA4BU,IAA5B,CAAiCsC,SAAjC;;AACA,WAAKI,eAAL,CAAqBpD,IAArB;;AACA+C,MAAAA,eAAe,CAACC,SAAD,CAAf;AACA;AACD;;AAED,UAAM;AACJK,MAAAA,UADI;AAEJC,MAAAA,YAFI;AAGJC,MAAAA,gBAHI;AAIJC,MAAAA,YAJI;AAKJC,MAAAA,sBALI;AAMJC,MAAAA;AANI,QAOF,KAAKC,YAAL,CACFT,QAAQ,CAACQ,UADP,EAEFR,QAAQ,CAACU,kBAFP,EAGFlB,KAHE,CAPJ;AAaA,UAAMmB,YAAY,GAAG,CAAC,CAACX,QAAQ,CAACQ,UAAhC;AACA,UAAM1C,UAAU,GAAG6C,YAAY,IAC7BJ,sBADiB,IAEjBF,gBAAgB,CAACjD,MAAjB,KAA4B,CAF9B;;AAIA,aAASwD,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,aAAO;AACLC,QAAAA,OAAO,EAAEzB,aAAa,CAACwB,IAAD,CAAb,CAAoBE,qBAApB,CAA0C,EAA1C,CADJ;AAELC,QAAAA,IAAI,EAAEH,IAAI,CAACI,WAFN;AAGLC,QAAAA,oBAAoB,EAAEL,IAAI,CAACK;AAHtB,OAAP;AAKD;;AAED,UAAMC,MAAM,GAAG;AACbX,MAAAA,UADa;AAEbE,MAAAA,kBAAkB,EAAEJ,YAFP;AAGbxC,MAAAA,UAHa;AAIbqC,MAAAA,UAAU,EAAErC,UAAU,GAAGqC,UAAU,CAACpB,GAAX,CAAe6B,eAAf,CAAH,GAAqC,EAJ9C;AAKbR,MAAAA,YAAY,EAAEtC,UAAU,GAAGsC,YAAY,CAACrB,GAAb,CAAiB6B,eAAjB,CAAH,GAAuC,EALlD;AAMb1C,MAAAA,QAAQ,EAAEwB,IAAI,CAACC,GAAL,EANG;AAObyB,MAAAA,EAAE,EAAE,KAAKC,SAAL,EAPS;AAQb/B,MAAAA;AARa,KAAf,CAxEoE,CAmFpE;AACA;AACA;;AACA,SAAKzE,gBAAL,CAAsBiC,IAAtB,EAA4BU,IAA5B,CAAiC2D,MAAjC;;AACA,SAAKjB,eAAL,CAAqBpD,IAArB;;AAEA,QAAI,CAACA,IAAD,IAAS,KAAK9B,gBAAlB,EAAoC;AAClC,WAAKA,gBAAL,CAAsB8B,IAAtB,IAA8B,KAAK7B,UAAL,GAAkB,CAAhD;AACD;;AAED4E,IAAAA,eAAe,CAACsB,MAAD,CAAf;AACD;;AAEDjB,EAAAA,eAAe,CAACpD,IAAD,EAAO;AACpB,QAAI,KAAKjC,gBAAL,CAAsBiC,IAAtB,EAA4BM,MAA5B,GAAqC,KAAKtC,aAA9C,EAA6D;AAC3D,YAAMwG,OAAO,GAAG,KAAKzG,gBAAL,CAAsBiC,IAAtB,EAA4BwB,MAA5B,CACd,CADc,EAEd,KAAKzD,gBAAL,CAAsBiC,IAAtB,EAA4BM,MAA5B,GAAqC,KAAKtC,aAF5B,CAAhB;AAIA,WAAKE,gBAAL,CAAsB8B,IAAtB,IAA8BwE,OAAO,CAACA,OAAO,CAAClE,MAAR,GAAiB,CAAlB,CAAP,CAA4Bc,QAA1D;AACD;AACF;;AAEDmD,EAAAA,SAAS,GAAG;AACV,qBAAU3B,IAAI,CAACC,GAAL,EAAV,cAAwBhC,IAAI,CAAC4D,MAAL,EAAxB;AACD;;AAEDC,EAAAA,gBAAgB,CAACX,IAAD,EAAO;AACrB,WAAOA,IAAI,CAACI,WAAL,IACL,CAACJ,IAAI,CAACY,IADD,IAEL;AACA,KAACZ,IAAI,CAACa,QAHD,IAILb,IAAI,CAACK,oBAJP;AAKD;;AAEDT,EAAAA,YAAY,GAAsE;AAAA,QAArEkB,cAAqE,uEAApD,IAAIC,GAAJ,EAAoD;AAAA,QAAzCC,oBAAyC,uEAAlB,EAAkB;AAAA,QAAdC,YAAc;AAChF,UAAMxB,YAAY,GAAG,EAArB;AACA,UAAMyB,aAAa,GAAG,IAAIH,GAAJ,EAAtB;AACA,UAAMI,aAAa,GAAG,IAAIJ,GAAJ,CAAQD,cAAR,CAAtB;AAEA,UAAMvB,YAAY,GAAG,EAArB;AACA,UAAMD,UAAU,GAAG,EAAnB;AACA,QAAII,sBAAsB,GAAG,IAA7B;AAEAuB,IAAAA,YAAY,CAACrD,OAAb,CAAqBoC,IAAI,IAAI;AAC3B,UAAIoB,UAAJ;AACA,UAAIC,UAAU,GAAG,KAAjB;;AAEA,UAAIrB,IAAI,CAACsB,UAAL,KAAoBtB,IAAI,CAACuB,UAAzB,IAAuCvB,IAAI,CAACwB,QAAhD,EAA0D;AACxD;AACA;AACA;AACAH,QAAAA,UAAU,GAAG,IAAb;AACAD,QAAAA,UAAU,GAAGtF,IAAI,CAACM,SAAL,CAAe;AAC1BoF,UAAAA,QAAQ,EAAExB,IAAI,CAACwB,QADW;AAE1BD,UAAAA,UAAU,EAAEvB,IAAI,CAACuB,UAFS;AAG1BD,UAAAA,UAAU,EAAEtB,IAAI,CAACsB;AAHS,SAAf,CAAb;AAKD,OAVD,MAUO;AACLF,QAAAA,UAAU,GAAGtF,IAAI,CAACM,SAAL,CAAe;AAC1BiE,UAAAA,oBAAoB,EAAEL,IAAI,CAACK,oBADD;AAE1BD,UAAAA,WAAW,EAAEJ,IAAI,CAACI,WAFQ;AAG1BqB,UAAAA,SAAS,EAAE,CAAC,CAACzB,IAAI,CAACyB,SAHQ;AAI1BC,UAAAA,UAAU,EAAE1B,IAAI,CAAC0B,UAJS;AAK1BC,UAAAA,QAAQ,EAAE3B,IAAI,CAAC2B,QALW;AAM1BC,UAAAA,KAAK,EAAE5B,IAAI,CAAC4B,KANc;AAO1BC,UAAAA,IAAI,EAAE7B,IAAI,CAAC6B,IAPe;AAQ1BjB,UAAAA,IAAI,EAAEZ,IAAI,CAACY;AARe,SAAf,CAAb;AAUD;;AAED,UACE,CAAC,KAAKD,gBAAL,CAAsBX,IAAtB,CADH,EAEE;AACAP,QAAAA,YAAY,CAAC9C,IAAb,WAAqByE,UAArB,cAAmCpB,IAAI,CAAC8B,UAAxC;AACA;AACD;;AAEDZ,MAAAA,aAAa,CAACa,GAAd,CAAkB/B,IAAI,CAACI,WAAvB,EAAoC;AAClC4B,QAAAA,SAAS,EAAEhC,IAAI,CAAC8B,UADkB;AAElCG,QAAAA,MAAM,EAAEb;AAF0B,OAApC;AAKA,YAAM;AACJY,QAAAA,SAAS,EAAEE,iBADP;AAEJD,QAAAA,MAAM,EAAEE;AAFJ,UAGFrB,cAAc,CAACsB,GAAf,CAAmBpC,IAAI,CAACI,WAAxB,KAAwC,EAH5C;;AAKA,UAAI,CAAC8B,iBAAL,EAAwB;AACtB5C,QAAAA,UAAU,CAAC3C,IAAX,CAAgBqD,IAAhB;AACD,OAFD,MAEO,IAAImC,cAAc,KAAKf,UAAvB,EAAmC;AACxC1B,QAAAA,sBAAsB,GAAG,KAAzB;AACD,OAFM,MAEA,IAAI,CAAC2B,UAAD,IAAea,iBAAiB,KAAKlC,IAAI,CAAC8B,UAA9C,EAA0D;AAC/DvC,QAAAA,YAAY,CAAC5C,IAAb,CAAkBqD,IAAlB;AACD;;AAEDmB,MAAAA,aAAa,CAACkB,MAAd,CAAqBrC,IAAI,CAACI,WAA1B;AACD,KArDD;AAuDA,UAAMZ,gBAAgB,GAAG8C,KAAK,CAAC5F,IAAN,CAAWyE,aAAa,CAACoB,IAAd,EAAX,CAAzB;;AACA,QAAI7C,sBAAJ,EAA4B;AAC1B,YAAM8C,mBAAmB,GAAG/C,YAAY,CAAClD,MAAb,KAAwByE,oBAAoB,CAACzE,MAA7C,IAC1BkD,YAAY,CAACgD,IAAb,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAaD,IAAI,KAAK1B,oBAAoB,CAAC2B,CAAD,CAA5D,CADF;AAEAjD,MAAAA,sBAAsB,GAAG,CAAC8C,mBAA1B;AACD;;AAED,WAAO;AACL7C,MAAAA,UAAU,EAAEuB,aADP;AAEL5B,MAAAA,UAFK;AAGLC,MAAAA,YAHK;AAILC,MAAAA,gBAJK;AAKLC,MAAAA,YALK;AAMLC,MAAAA;AANK,KAAP;AAQD;;AAEDN,EAAAA,iBAAiB,CAACX,IAAD,EAAOxC,IAAP,EAAa;AAC5B,UAAMe,UAAU,GAAG,KAAKhD,gBAAL,CAAsBiC,IAAtB,KAA+B,EAAlD;;AACA,SAAK,IAAI0G,CAAC,GAAG3F,UAAU,CAACT,MAAX,GAAoB,CAAjC,EAAoCoG,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAC/C,UAAI3F,UAAU,CAAC2F,CAAD,CAAV,CAAclE,IAAd,KAAuBA,IAA3B,EAAiC;AAC/B,eAAOzB,UAAU,CAAC2F,CAAD,CAAjB;AACD;AACF;AACF;;AAlYoB","sourcesContent":["import WS from 'ws';\nimport runLog from './run-log.js';\nimport crypto from 'crypto';\nimport { AssertionError } from 'assert';\nimport Anser from \"anser\";\nimport { CordovaBuilder } from '../cordova/builder.js';\n\nexport class HMRServer {\n  constructor({\n    proxy, hmrPath, secret, projectContext, cordovaServerPort\n}) {\n    this.proxy = proxy;\n    this.projectContext = projectContext;\n\n    this.hmrPath = hmrPath;\n    this.secret = secret;\n\n    this.wsServer = null;\n    this.connByArch = Object.create(null);\n    this.started = false;\n\n    this.changeSetsByArch = Object.create(null);\n\n    this.maxChangeSets = 300;\n    this.cacheKeys = Object.create(null);\n    this.trimmedArchUntil = Object.create(null);\n    this.firstBuild = null;\n\n    if (!cordovaServerPort) {\n     cordovaServerPort = CordovaBuilder.createCordovaServerPort(\n          projectContext.appIdentifier\n        );\n    }\n\n    this.cordovaOrigin = `http://localhost:${cordovaServerPort}`;\n  }\n\n  start() {\n    if (!this.proxy.started) {\n      throw new Error('Proxy must be started before HMR Server');\n    }\n\n    this.wsServer = new WS.Server({\n      noServer: true,\n    });\n    this.proxy.server.on('upgrade', (req, res, head) => {\n      if (req.url === this.hmrPath) {\n        this.wsServer.handleUpgrade(req, res, head, (conn) => {\n          this._handleWsConn(conn, req);\n        });\n      }\n    });\n\n    this.started = true;\n  }\n\n  stop() {\n    this.wsServer.close();\n    this.connByArch = Object.create(null);\n  }\n\n  _handleWsConn(conn, req) {\n    let registered = false;\n    let connArch = null;\n    let fromCordova = this.cordovaOrigin && req.headers.origin === this.cordovaOrigin;\n\n    conn.on('message', (_message) => {\n      const message = JSON.parse(_message);\n\n      switch (message.type) {\n        case 'register': {\n          const { arch, appId, secret = '' } = message;\n\n          if (appId !== this.projectContext.appIdentifier) {\n            // A different app is trying to request changes\n            conn.send(JSON.stringify({\n              type: 'register-failed',\n              reason: 'wrong-app'\n            }));\n          }\n\n          let secretsMatch = secret.length === this.secret.length &&\n            crypto.timingSafeEqual(Buffer.from(secret), Buffer.from(this.secret));\n\n          if (\n            !fromCordova &&\n            !secretsMatch\n          ) {\n            conn.send(JSON.stringify({\n              type: 'register-failed',\n              reason: 'wrong-secret'\n            }));\n            conn.close();\n            return;\n          }\n\n          this.connByArch[arch] = this.connByArch[arch] || [];\n          this.connByArch[arch].push(conn);\n          connArch = arch;\n          registered = true;\n          break;\n        }\n\n        case 'request-changes': {\n          if (!registered) {\n            // Might have sent the wrong secret or be the wrong app\n            // Even if we closed the connection, it might still handle\n            // this message.\n            return;\n          }\n          const { after, arch } = message;\n\n          const trimmedUntil = this.trimmedArchUntil[arch] || Math.Infinity;\n          if (trimmedUntil > after) {\n            // We've removed changeSets needed for the client to update with HMR\n            conn.send(\n              JSON.stringify({\n                type: 'changes',\n                changeSets: [\n                  { reloadable: false }\n                ]\n              })\n            );\n            return;\n          }\n\n          const archChangeSets = this.changeSetsByArch[arch] || [];\n          const newChanges = archChangeSets.filter(({ linkedAt }) => {\n            return linkedAt > after;\n          });\n\n          conn.send(JSON.stringify({\n            type: 'changes',\n            changeSets: newChanges\n          }));\n\n          break;\n        }\n\n        default:\n          throw new Error(`Unknown HMR message ${message.type}`);\n      }\n    });\n\n    // TODO: should use pings to detect disconnected sockets\n    conn.on('close', () => {\n      if (!connArch) {\n        return;\n      }\n\n      const archConns = this.connByArch[connArch] || [];\n      const index = archConns.indexOf(conn);\n      if (index > -1) {\n        archConns.splice(\n          index,\n          1\n        );\n      }\n    });\n  }\n\n  _sendAll(message) {\n    Object.values(this.connByArch).forEach(conns => {\n      conns.forEach(conn => {\n        conn.send(JSON.stringify(message));\n      });\n    });\n  }\n\n  setAppState(state) {\n    if (state === 'error') {\n      const lines = runLog.getLog().map(line => {\n        return Anser.ansiToHtml(Anser.escapeForHtml(line.message))\n      });\n      this._sendAll({\n        type: 'app-state',\n        state: 'error',\n        log: lines\n      });\n    } else if (state === 'okay') {\n      this._sendAll({\n        type: 'app-state',\n        state: 'okay'\n      });\n    }\n  }\n\n  compare({ name, arch, hmrAvailable, files, cacheKey }, getFileOutput) {\n    if (this.firstBuild = null) {\n      this.firstBuild = Date.now();\n    }\n\n    this.changeSetsByArch[arch] = this.changeSetsByArch[arch] || [];\n    const previousCacheKey = this.cacheKeys[`${arch}-${name}`];\n\n    if (previousCacheKey === cacheKey) {\n      return;\n    }\n\n    // Try to do HMR without waiting for the build to finish\n    // If it fails, the client will retry after the build finishes so\n    // it can fall back to hot code push\n    const sendEagerUpdate = (changeset) => {\n      if (!this.connByArch[arch]) {\n        return;\n      }\n\n      this.connByArch[arch].forEach(conn => {\n        conn.send(JSON.stringify({\n          type: 'changes',\n          changeSets: [changeset],\n          eager: true\n        }));\n      });\n    }\n\n    this.cacheKeys[`${arch}-${name}`] = cacheKey;\n    const previous = this.findLastChangeset(name, arch) || {};\n\n    if (!hmrAvailable) {\n      let changeset = {\n        name,\n        reloadable: false,\n        cacheKey,\n        // TODO: use more accurate name\n        linkedAt: Date.now()\n      };\n      this.changeSetsByArch[arch].push(changeset);\n      this._trimChangeSets(arch);\n      sendEagerUpdate(changeset);\n      return;\n    }\n\n    const {\n      addedFiles,\n      changedFiles,\n      removedFilePaths,\n      unreloadable,\n      onlyReplaceableChanges,\n      fileHashes\n    } = this.compareFiles(\n      previous.fileHashes,\n      previous.unreloadableHashes,\n      files\n    );\n\n    const couldCompare = !!previous.fileHashes\n    const reloadable = couldCompare &&\n      onlyReplaceableChanges &&\n      removedFilePaths.length === 0;\n\n    function saveFileDetails(file) {\n      return {\n        content: getFileOutput(file).toStringWithSourceMap({}),\n        path: file.absModuleId,\n        meteorInstallOptions: file.meteorInstallOptions\n      };\n    }\n\n    const result = {\n      fileHashes,\n      unreloadableHashes: unreloadable,\n      reloadable,\n      addedFiles: reloadable ? addedFiles.map(saveFileDetails) : [],\n      changedFiles: reloadable ? changedFiles.map(saveFileDetails) : [],\n      linkedAt: Date.now(),\n      id: this._createId(),\n      name\n    };\n\n    // TODO: we should also store the latest change set\n    // for each arch and name someplace else so it doesn't\n    // get removed when trimming changesets\n    this.changeSetsByArch[arch].push(result);\n    this._trimChangeSets(arch);\n\n    if (!arch in this.trimmedArchUntil) {\n      this.trimmedArchUntil[arch] = this.firstBuild - 1;\n    }\n\n    sendEagerUpdate(result);\n  }\n\n  _trimChangeSets(arch) {\n    if (this.changeSetsByArch[arch].length > this.maxChangeSets) {\n      const removed = this.changeSetsByArch[arch].splice(\n        0,\n        this.changeSetsByArch[arch].length - this.maxChangeSets\n      );\n      this.trimmedArchUntil[arch] = removed[removed.length - 1].linkedAt;\n    }\n  }\n\n  _createId() {\n    return `${Date.now()}-${Math.random()}`;\n  }\n\n  _checkReloadable(file) {\n    return file.absModuleId &&\n      !file.bare &&\n      // TODO: support jsonData\n      !file.jsonData &&\n      file.meteorInstallOptions\n  }\n\n  compareFiles(previousHashes = new Map(), previousUnreloadable = [], currentFiles) {\n    const unreloadable = [];\n    const currentHashes = new Map();\n    const unseenModules = new Map(previousHashes);\n\n    const changedFiles = [];\n    const addedFiles = [];\n    let onlyReplaceableChanges = true;\n\n    currentFiles.forEach(file => {\n      let fileConfig;\n      let ignoreHash = false;\n\n      if (file.targetPath !== file.sourcePath && file.implicit) {\n        // The import scanner created this file as an alias to the target path\n        // This file's content does not change when the hash does, only the\n        // content of the new file created at the target path.\n        ignoreHash = true;\n        fileConfig = JSON.stringify({\n          implicit: file.implicit,\n          sourcePath: file.sourcePath,\n          targetPath: file.targetPath\n        });\n      } else {\n        fileConfig = JSON.stringify({\n          meteorInstallOptions: file.meteorInstallOptions,\n          absModuleId: file.absModuleId,\n          sourceMap: !!file.sourceMap,\n          mainModule: file.mainModule,\n          imported: file.imported,\n          alias: file.alias,\n          lazy: file.lazy,\n          bare: file.bare\n        })\n      }\n\n      if (\n        !this._checkReloadable(file)\n      ) {\n        unreloadable.push(`${fileConfig}-${file._inputHash}`);\n        return;\n      }\n\n      currentHashes.set(file.absModuleId, {\n        inputHash: file._inputHash,\n        config: fileConfig\n      });\n\n      const {\n        inputHash: previousInputHash,\n        config: previousConfig\n      } = previousHashes.get(file.absModuleId) || {};\n\n      if (!previousInputHash) {\n        addedFiles.push(file);\n      } else if (previousConfig !== fileConfig) {\n        onlyReplaceableChanges = false;\n      } else if (!ignoreHash && previousInputHash !== file._inputHash) {\n        changedFiles.push(file);\n      }\n\n      unseenModules.delete(file.absModuleId);\n    });\n\n    const removedFilePaths = Array.from(unseenModules.keys());\n    if (onlyReplaceableChanges) {\n      const unreloadableChanged = unreloadable.length !== previousUnreloadable.length ||\n        unreloadable.some((hash, i) => hash !== previousUnreloadable[i]);\n      onlyReplaceableChanges = !unreloadableChanged;\n    }\n\n    return {\n      fileHashes: currentHashes,\n      addedFiles,\n      changedFiles,\n      removedFilePaths,\n      unreloadable,\n      onlyReplaceableChanges,\n    };\n  }\n\n  findLastChangeset(name, arch) {\n    const changeSets = this.changeSetsByArch[arch] || [];\n    for (let i = changeSets.length - 1; i >= 0; i--) {\n      if (changeSets[i].name === name) {\n        return changeSets[i];\n      }\n    }\n  }\n}\n"],"file":"tools/runners/run-hmr.js.map"}